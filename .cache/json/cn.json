{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/content/welcome-text.en.md absPath of file >>> MarkdownRemark","excerpt":"亲爱的读者，本文档的目的是让您对于 Cardano 平台技术栈第一层即结算层有所了解。如果您理解了结算层是什么，我们建议您先阅读论文和实现的差异，然后再阅读协议和实现的文档。 本文档目标读者是 IOHK…","html":"<p>亲爱的读者，本文档的目的是让您对于 Cardano 平台技术栈第一层即结算层有所了解。如果您理解了结算层是什么，我们建议您先阅读论文和实现的差异，然后再阅读协议和实现的文档。</p>\n<p>本文档目标读者是 IOHK 的开发人员，第三方软件开发人员，审计和致力于实现卡尔达诺结算层或使用卡尔达诺结算层参考实现的咨询人员。</p>","frontmatter":{"path":"/cn/welcome-text/","doc_title":null,"author":null,"date":null,"language":"cn","label":"content","keywords":"welcome","group":null}}},{"node":{"id":"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/content/intro.en.md absPath of file >>> MarkdownRemark","excerpt":"Cardano SL (或卡尔达诺运算层）是由 IOHK 联合爱丁堡大学，雅典大学和康涅狄格大学共同设计开发的一种加密货币。卡尔达诺运算层是基于 Aggelos Kiayias，Alexander Russell，Bernardo David 和 Roman Oliynykov…","html":"<h3>Cardano SL</h3>\n<p>(或卡尔达诺运算层）是由 IOHK 联合爱丁堡大学，雅典大学和康涅狄格大学共同设计开发的一种加密货币。卡尔达诺运算层是基于 Aggelos Kiayias，Alexander Russell，Bernardo David 和 Roman Oliynykov 的白皮书 『乌洛波罗斯：可证明安全的权益证明协议』的 Haskell 实现。</p>\n<p>您可以将卡尔达诺结算层视为基于比特币重新设计的针对比特币缺陷的自由修复。 有关卡尔达诺结算层和比特币之间的相似之处和差异的更多信息，请阅读『卡尔达诺结算层为什么特别?』。</p>\n<h3>加密货币基础</h3>\n<p>在给出加密货币的定义之前，我们先来谈谈为什么我们在意数字货币，特别是加密货币。</p>\n<h3>我们为什么在意?</h3>\n<ul>\n<li>\n<h4>速度</h4>\n<p>与传统（也称为法定）中心银行货币，与日元或美元相反，电子货币不需要一个银行系统来转移价值。这一限制的解除，使用数字货币的速度要快于银行业务，尤其是在全球范围内。使用数字货币从大阪转移10美元到丹佛不再需要数天的时间。无论距离如何，所有交易都能迅速完成。</p>\n</li>\n<li>\n<h4>你掌控你自己的钱</h4>\n<p>所有的商业银行账户所有者在收到支付请求后在合理的时间内只能支付一定的金额。银行体系对任何价值量都有限制，使个人无法迅速撤出或转移大量资金。有加密货币的情况下，持有一种称为密钥这一特殊信息的人就可以随意花钱。没有其他实体有权操纵用户拥有的价值。</p>\n</li>\n<li>\n<h4>匿名</h4>\n<p>人们可以根据需要，拥有任意多的加密货币地址，从不同的地址接收，消费资产。经营电子商务商店的商家可以拥有一组收款和退款的地址，以及一个用于他们自身需要的单独的个人『钱包』。通过统一的接口控制所有这些钱包，并且不需要登录到多个支付平台，这使得该过程非常节省时间。</p>\n</li>\n<li>\n<h4>安全</h4>\n<p>你的钱就像可用于消费的密钥一样安全。这意味着将密钥存储在保险箱中的 USB 闪存上相当于让纸币处于安全状态。即使进行了成功的网络攻击，也绝对没有人能够窃取这笔钱。</p>\n</li>\n<li>\n<h4>扩展性</h4>\n<p>使用一种称为侧链的方法，以及通用加密货币，如卡尔达诺结算层和比特币，就可以启用特定领域的加密货币，例如以太经典。这样一来，通过特定领域的加密货币开发的任何创新产品都可以让参与者在通用的加密货币中保持价值。这样的应用程序的例子有身份管理，游戏和赌博，以及可验证计算。</p>\n</li>\n</ul>\n<h3>什么是加密货币?</h3>\n<p>加密货币是一种数字货币形式，使用密码来控制价值。密码学提供了一种生成任何类型信息的真实真实性证据的方法。这就是所谓的数字签名。在加密货币中，我们通过签署和发送交易到网络并接收已确认的交易块，生成一个总账（一个提供每个地址有多少钱的信息的数据库）。加密货币通常是分散的，这意味着来自全球各地的许多人通过运行加密货币节点参与总账的生成。因此，必须达成关于总账状况的共识。下一节讨论实现这种共识的两个最重要的方法。</p>\n<h3>卡尔达诺结算层为什么特别</h3>\n<p>虽然比特币和卡尔达诺结算层之间有相似之处，但这两个加密货币之间也有很多不同之处。最显着的区别是，比特币是工作量证明类型的加密货币，而卡尔达诺结算层使用权益证明的方法达成共识。这鼓励诚信和长期的参与。</p>\n<h3>共识算法的目的</h3>\n<p>共识算法被用来产生新的交易区块，使账本更新状态。每当有人发布一个交易区块时，他们（或者说他们的运行加密货币协议的节点）就必须附上他们已经证明的证据。下面讨论两种类型的证明。</p>\n<h3>工作量证明和挖矿</h3>\n<p>工作量证明是加密货币最普遍的共识算法类型。它起源于比特币，加密货币就是这么工作的。为了生成工作证明，计算机必须解决一个挑战。这是难以解决的计算繁重的问题，但解决方案很容易验证。当一台基于网络的工作量证明的计算机找到一个解决方案时，它会将交易发布于同它一起计算的其他计算机。这台计算机会因为产生区块得到交易费和奖励。整个过程被称为挖矿。挖矿是非常耗能的，所需的能源数量在不断增加，这可能导致不健康的竞争。</p>\n<h3>权益证明和铸币</h3>\n<p>权益证明是一种生成区块的新方法。由 Aggelos Kiayias 教授领导的 IOHK 科学家们设计了第一个可证明的，称为乌洛波罗斯的权益证明算法。乌洛波罗斯是卡尔达诺结算层的核心。研究小组已经发表了一篇白皮书 ，这封白皮书对于那些拥有加密货币理论背景的人来说是值得一读的。权益证明的核心思想是，不要浪费电力来解决计算繁重的问题，而是选择一个节点来铸造一个新的区块，其概率与这个节点的硬币数量成正相关。如果一个节点有整数个(> 0)的 slot，它被称为 slot 所有人。如果一个节点最终被选中来铸造一个区块，那么这个节点被称为 slot 领导者。您可以在卡尔达诺结算层的股权证明中了解更多关于该流程的信息。</p>\n<h3>卡尔达诺结算层之上</h3>\n<p>卡尔达诺结算层被称为『层』是有原因的。这是卡尔达诺平台的第一个组件。最终，它将被扩展到一个控制层，作为一个可信的计算框架来评估一种特殊的证明，以确保一定的计算正确执行。在游戏和赌博中，这样的系统被用于验证随机数生成和游戏结果的真实性。伴随着侧链，它将有可能完成诸如在游戏中公平分配奖金的任务。但是控制层的应用远远超出了游戏和赌博。身份管理，信用系统等将成为卡尔达诺平台的一部分。我们将迭代卡尔达诺钱包应用程序 Daedalus，使其变成一个具有自动加密货币交易功能和合法加密货币交易功能的通用加密货币钱包。</p>","frontmatter":{"path":"/cn/intro-text/","doc_title":null,"author":null,"date":null,"language":"cn","label":"content","keywords":"intro","group":null}}},{"node":{"id":"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2017-01-01-index.cn.md absPath of file >>> MarkdownRemark","excerpt":"亲爱的读者，本文档的目的是让您对于 Cardano 平台技术栈第一层即结算层有所了解。如果您理解了结算层是什么，我们建议您先阅读 论文和实现的差异 ，然后再阅读 协议和实现的文档 。 本文档目标读者是 IOHK…","html":"<!-- Reviewed at d0868afac50ba6ffcbd95054e65cbf77fa513082 -->\n<p>亲爱的读者，本文档的目的是让您对于 Cardano 平台技术栈第一层即结算层有所了解。如果您理解了结算层是什么，我们建议您先阅读<a href=\"/cardano/differences/\">论文和实现的差异</a>，然后再阅读<a href=\"/technical/protocols/csl-application-level/\">协议和实现的文档</a>。</p>\n<p>本文档目标读者是 IOHK 的开发人员，第三方软件开发人员，审计和致力于实现卡尔达诺结算层或使用卡尔达诺结算层参考实现的咨询人员。</p>\n<!-- CARDANO_SL_README_BEGIN_1 -->\n<h2>什么是卡尔达诺结算层?</h2>\n<p>Cardano SL（或卡尔达诺运算层）是由 <a href=\"https://iohk.io/team\">IOHK</a> 联合爱丁堡大学，雅典大学和康涅狄格大学共同设计开发的一种加密货币。卡尔达诺运算层是基于 Aggelos Kiayias，Alexander Russell，Bernardo David 和 Roman Oliynykov 的白皮书 <a href=\"https://iohk.io/research/papers/#9BKRHCSI\">『乌洛波罗斯：可证明安全的权益证明协议』</a>的 Haskell 实现。</p>\n<p>您可以将卡尔达诺结算层视为基于比特币重新设计的针对比特币缺陷的自由修复。 有关卡尔达诺结算层和比特币之间的相似之处和差异的更多信息，请阅读<a href=\"http://cardanodocs.com/introduction/cn/#%E5%8D%A1%E5%B0%94%E8%BE%BE%E8%AF%BA%E8%BF%90%E7%AE%97%E5%B1%82%E4%B8%BA%E4%BB%80%E4%B9%88%E7%89%B9%E5%88%AB\">『卡尔达诺结算层为什么特别?』</a>。</p>\n<!-- CARDANO_SL_README_END_1 -->\n<h2>加密货币基础</h2>\n<p>在给出加密货币的定义之前，我们先来谈谈为什么我们在意数字货币，特别是加密货币。</p>\n<h3>我们为什么在意?</h3>\n<h4>速度</h4>\n<p>与传统（也称为法定）中心银行货币，与日元或美元相反，电子货币不需要一个银行系统来转移价值。这一限制的解除，使用数字货币的速度要快于银行业务，尤其是在全球范围内。使用数字货币从大阪转移10美元到丹佛不再需要数天的时间。无论距离如何，所有交易都能迅速完成。</p>\n<h4>你掌控你自己的钱</h4>\n<p>所有的商业银行账户所有者在收到支付请求后在合理的时间内只能支付一定的金额。银行体系对任何价值量都有限制，使个人无法迅速撤出或转移大量资金。有加密货币的情况下，持有一种称为<strong>密钥</strong>这一特殊信息的人就可以随意花钱。没有其他实体有权操纵用户拥有的价值。</p>\n<h4>匿名</h4>\n<p>人们可以根据需要，拥有任意多的加密货币地址，从不同的地址接收，消费资产。经营电子商务商店的商家可以拥有一组收款和退款的地址，以及一个用于他们自身需要的单独的个人『钱包』。通过统一的接口控制所有这些钱包，并且不需要登录到多个支付平台，这使得该过程非常节省时间。</p>\n<h4>安全</h4>\n<p>你的钱就像可用于消费的<strong>密钥</strong>一样安全。这意味着将密钥存储在保险箱中的 USB 闪存上相当于让纸币处于安全状态。即使进行了成功的网络攻击，也绝对没有人能够窃取这笔钱。</p>\n<h4>扩展性</h4>\n<p>使用一种称为<a href=\"https://www.blockstream.com/sidechains.pdf\">侧链</a>的方法，以及通用加密货币，如卡尔达诺结算层和比特币，就可以启用特定领域的加密货币，例如以太经典。这样一来，通过特定领域的加密货币开发的任何创新产品都可以让参与者在通用的加密货币中保持价值。这样的应用程序的例子有身份管理，游戏和赌博，以及可验证计算。</p>\n<h3>什么是加密货币?</h3>\n<p>加密货币是一种数字货币形式，使用密码来控制价值。密码学提供了一种生成任何类型信息的真实真实性证据的方法。这就是所谓的<em>数字签名</em>。在加密货币中，我们通过签署和发送交易到网络并接收已确认的交易块，生成一个总账（一个提供每个地址有多少钱的信息的数据库）。加密货币通常是分散的，这意味着来自全球各地的许多人通过运行加密货币节点参与总账的生成。因此，必须达成关于总账状况的共识。下一节讨论实现这种共识的两个最重要的方法。</p>\n<h2>卡尔达诺结算层为什么特别</h2>\n<!-- v0.1.0.0 -->\n<p>虽然比特币和卡尔达诺结算层之间有相似之处，但这两个加密货币之间也有很多不同之处。最显着的区别是，比特币是工作量证明类型的加密货币，而卡尔达诺结算层使用权益证明的方法达成共识。这鼓励诚信和长期的参与。</p>\n<h3>共识算法的目的</h3>\n<p>共识算法被用来产生新的交易区块，使账本更新状态。每当有人发布一个交易区块时，他们（或者说他们的运行加密货币协议的节点）就必须附上他们已经证明的证据。下面讨论两种类型的证明。</p>\n<h3>工作量证明和挖矿</h3>\n<p>工作量证明是加密货币最普遍的共识算法类型。它起源于比特币，加密货币就是这么工作的。为了生成工作证明，计算机必须解决一个挑战。这是难以解决的计算繁重的问题，但解决方案很容易验证。当一台基于网络的工作量证明的计算机找到一个解决方案时，它会将交易发布于同它一起计算的其他计算机。这台计算机会因为产生区块得到交易费和奖励。整个过程被称为<em>挖矿</em>。挖矿是非常耗能的，所需的能源数量在不断增加，这可能导致不健康的竞争。</p>\n<h3>权益证明和铸币</h3>\n<p>权益证明是一种生成区块的新方法。由 <a href=\"https://iohk.io/team/aggelos-kiayias/\">Aggelos Kiayias 教授</a>领导的 IOHK 科学家们设计了第一个可证明的，称为乌洛波罗斯的权益证明算法。乌洛波罗斯是卡尔达诺结算层的核心。研究小组已经发表了一篇<a href=\"https://iohk.io/research/papers/a-provably-secure-proof-of-stake-blockchain-protocol/\">白皮书</a> ，这封白皮书对于那些拥有加密货币理论背景的人来说是值得一读的。权益证明的核心思想是，不要浪费电力来解决计算繁重的问题，而是选择一个节点来铸造一个新的区块，其概率与这个节点的硬币数量成正相关。如果一个节点有整数个(> 0)的 <a href=\"/cardano/proof-of-stake/#stake\">slot</a>，它被称为 slot 所有人。如果一个节点最终被选中来铸造一个区块，那么这个节点被称为 slot 领导者。您可以在<a href=\"/cardano/proof-of-stake/\">卡尔达诺结算层的股权证明</a>中了解更多关于该流程的信息。</p>\n<!-- CARDANO_SL_README_BEGIN_2 -->\n<h2>卡尔达诺结算层之上</h2>\n<p>卡尔达诺结算层被称为『层』是有原因的。这是卡尔达诺平台的第一个组件。最终，它将被扩展到一个控制层，作为一个可信的计算框架来评估一种特殊的证明，以确保一定的计算正确执行。在游戏和赌博中，这样的系统被用于验证随机数生成和游戏结果的真实性。伴随着侧链，它将有可能完成诸如在游戏中公平分配奖金的任务。但是控制层的应用远远超出了游戏和赌博。身份管理，信用系统等将成为卡尔达诺平台的一部分。我们将迭代卡尔达诺<a href=\"https://github.com/input-output-hk/daedalus\">钱包应用程序 Daedalus</a>，使其变成一个具有自动加密货币交易功能和合法加密货币交易功能的通用加密货币钱包。</p>\n<!-- CARDANO_SL_README_END_2 -->","frontmatter":{"path":"/cn/introduction/","doc_title":"介绍","author":null,"date":"2017-01-01","language":"cn","label":"docs","keywords":null,"group":"base"}}},{"node":{"id":"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2017-01-04-installation.cn.md absPath of file >>> MarkdownRemark","excerpt":"安装 支持的平台 支持的平台包括 Windows, macOS 和 Linux。这是 代达罗斯钱包 的  Windows 和 macOS 平台安装器 。 Linux 平台的安装器将在不久发布。目前来说，有两种方式在 Linux…","html":"<!-- Reviewed at d0868afac50ba6ffcbd95054e65cbf77fa513082 -->\n<h1>安装</h1>\n<!-- CARDANO_SL_README_BEGIN_3 -->\n<h2>支持的平台</h2>\n<p>支持的平台包括 Windows, macOS 和 Linux。这是<a href=\"https://github.com/input-output-hk/daedalus\">代达罗斯钱包</a>的 <a href=\"https://daedaluswallet.io/#download\">Windows 和 macOS 平台安装器</a>。</p>\n<p>Linux 平台的安装器将在不久发布。目前来说，有两种方式在 Linux 上运行卡尔达诺结算层：</p>\n<ol>\n<li>从源码构建（推荐方式）。请参考<a href=\"https://github.com/input-output-hk/cardano-sl/blob/develop/docs/how-to/build-cardano-sl-and-daedalus-from-source-code.md\">如何通过源代码构建卡尔达诺结算层以及代达罗斯钱包</a>文档。</li>\n<li>\n<p>使用<strong>非官方</strong> Arch Linux 安装包：</p>\n<ul>\n<li><a href=\"https://aur.archlinux.org/packages/cardano-sl/\">cardano-sl</a></li>\n<li><a href=\"https://aur.archlinux.org/packages/daedalus-bridge/\">daedalus-bridge</a></li>\n<li><a href=\"https://aur.archlinux.org/packages/daedalus/\">daedalus</a></li>\n</ul>\n</li>\n</ol>\n<!-- CARDANO_SL_README_END_3 -->","frontmatter":{"path":"/cn/installation","doc_title":"安装","author":null,"date":"2017-01-01","language":"cn","label":"docs","keywords":null,"group":"base"}}},{"node":{"id":"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2017-01-10-technical.cn.md absPath of file >>> MarkdownRemark","excerpt":"…","html":"<!-- Reviewed at d0868afac50ba6ffcbd95054e65cbf77fa513082 -->\n<h1>卡尔达诺结算层技术细节</h1>\n<p>对于想要贡献原始客户端，以及想基于卡尔达诺结算层创建自己的客户端的开发人员来说，这一章节是一个起点。尽管如此，这一节将主要覆盖原始客户端，并有所扩展，在一段时间内可以把它当做最初的参考文档</p>\n<h2>高层次概述</h2>\n<p>一个卡尔达诺结算层节点是一个区块链节点。运行时，他会找到其他节点(通过 <a href=\"http://ast-deim.urv.cat/cpairot/dhts.html\">DHT</a>)，然后开始执行区块链的相关任务。</p>\n<p>卡尔达诺结算层中的时间会以 epochs 划分。epochs 又会以 slots 划分。 Epochs 和 slots 会被编号。 因此，slot <code>(3,5)</code> 被读作『第3个 epochs 的第5个 slot』 (第0个 slot 以及第0个 epoch 也是可以的).</p>\n<p>卡尔达诺结算层会使用一些常量集, 特殊值定义在\n<a href=\"https://github.com/input-output-hk/cardano-sl/blob/bf5dd592b7bf77a68bf71314718dc7a8d5cc8877/core/constants.yaml\"><code>constants.yaml</code> 配置文件中</a>。\n主要有两种：生产模式和开发模式。 在本指南中，我们将参考生产常量。</p>\n<p>假设卡尔达诺结算层的值是：:</p>\n<ul>\n<li>slot 持续时间: 120秒,</li>\n<li>安全参数 <em>k</em>: 60.</li>\n</ul>\n<p>换句话说，<strong>一个 slot 可以持续120秒</strong>, 而一个 epochs有 <a href=\"https://github.com/input-output-hk/cardano-sl/blob/9ee12d3cc9ca0c8ad95f3031518a4a7acdcffc56/core/Pos/Core/Constants/Raw.hs#L161\"><code>10×k</code></a>\n个 slot, 所以它可以持续<strong>1200分钟</strong>或<strong>20个小时</strong>.</p>\n<p>每个 slot 上有一个节点被称作 slot 领导者。只有这个 slot 有权在这些 slot 中生成一个新区块；这个区块会被加入到区块链中。然而我们并不能确保这个区块一定会被生成(比如 slot 领导者在响应的过程中可能会离线)。</p>\n<p>此外，slot 领导者可以将其权利委托给另一个节点 <code>N</code>；在这种情况下，节点 <code>N</code> 而非 slot 领导者将有权生成一个新的块。请注意，<code>N</code> 具有委托权的节点不能被称为 slot 领导者，它只是一个委托。</p>\n<p>理论上可以将 slot 领导者的权力委托给多个节点，但是不推荐，之后会解释原因。此外，使用相同的密钥（即一台计算机上）我们可以运行中多个节点，假设有节点 <code>A</code>, <code>B</code>, <code>C</code>，如果节点 <code>A</code> 被选为 slot 领导者，不仅 <code>A</code> 本身，节点 <code>B</code> 和 <code>C</code> 都能够生成一个新区块。在这种情况下，每一个节点都将发出一个不同的块，网络将分叉 - 每个其他节点将只接受这些并发区块块中的一个。之后，这个分叉将被淘汰。</p>\n<p>在 epoch 中，节点之间相互发送 MPC 消息，以达成共识，谁将被允许在下一个时期生成区块。Data 消息中的有效载荷 （以及事务）会被包含在块中。</p>\n<p>一个地址持有的货币（或『股份』）越多，被选择生成一个区块的可能性就越大。请阅读<a href=\"/cardano/proof-of-stake/\">乌洛波罗斯权益证明算法</a>获取更多细节。</p>\n<p>简而言之:</p>\n<ol>\n<li>发送信息，</li>\n<li>接收信息/交易/等等，</li>\n<li>形成一个区块 (如果你是 slot 领导者的话)，</li>\n<li>重复。</li>\n</ol>\n<h2>商业逻辑</h2>\n<h3>接收者</h3>\n<p>接收者处理传入的消息并对其作出响应。各种补充的听众不会被覆盖，而是集中在一个接收者上。</p>\n<p>接收者大多使用<a href=\"/technical/protocols/csl-application-level/#invreqdata-and-messagepart\">中继框架</a>，其中包括三种类型的消息：</p>\n<ul>\n<li><code>Inventory</code> 消息：节点在获取新数据时向网络发布消息。  </li>\n<li><code>Request</code> 消息：如果某个新数据没有被这个节点获取的话，节点会向其他节点获取在 <code>Inventory</code> 消息中的新数据。  </li>\n<li><code>Data</code> 消息：节点对 <code>Request</code> 消息回复的数据。<code>Data</code>消息包含具体的数据。</li>\n</ul>\n<p>例如，当用户创建新的交易时，钱包将具有交易 ID 的 <code>Inventory</code> 消息发送到网络。如果收到 <code>Inventory</code> 的节点没有该 ID 相关的交易记录，那么它会回复 <code>Request</code> 消息，然后钱包会在 <code>Data</code> 消息中发送该交易信息。节点收到 <code>Data</code> 消息后，将 <code>Inventory</code> 消息发送给 DHT 网络中的邻居，并重复之前的操作。</p>\n<p>另一个例子 - 区块接收者：<a href=\"https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/src/Pos/Block/Network/Listeners.hs#L30\"><code>handleGetHeaders</code></a>，\n<a href=\"https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/src/Pos/Block/Network/Listeners.hs#L50\"><code>handleGetBlocks</code></a>，\n<a href=\"https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/src/Pos/Block/Network/Listeners.hs#L77\"><code>handleBlockHeaders</code></a>。</p>\n<h3>Worker</h3>\n<p>一个 Worker 会在一个时间区间内进行重复性的工作. 比如：</p>\n<ul>\n<li><a href=\"https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/infra/Pos/Communication/Protocol.hs#L218\"><code>onNewSlotWorker</code></a>：在每个插槽的开始时运行。做一些清理，然后运行其他功能。这个 Worker 在这个 epoch 的开始时也会创造了一个 『起始块』。有两种类型的块：『生成块』和『主块』。主块储存在区块链中; 在 epoch 之间，每个节点都会间断性地生成块。主块不会被告知其他节点。但是，如果节点离线一段时间，并且需要同步区块链，节点可以请求其他人的创世区块。</li>\n<li><a href=\"https://github.com/input-output-hk/cardano-sl/blob/d01d392d49db8a25e17749173ec9bce057911191/src/Pos/Block/Worker.hs#L69\"><code>blkOnNewSlot</code></a>: 创建一个新块（当轮到节点创建一个新块时），并将其发给其他节点。</li>\n</ul>\n<h2>权益证明</h2>\n<p>卡尔达诺结算层的核心基于 乌洛波罗斯 权益证明算法。正如同名的<a href=\"https://eprint.iacr.org/2016/889\">白皮书</a>所描述的那样。</p>\n<h2>分叉</h2>\n<p>通常，一个链（主链）由一个节点维护，但最终可能会出现分叉链。回想一下，只有区块 <code>k</code> 和更多 slot 被认为是稳定的。这样一来，如果接收一个区块，它既不是区块链的一部分也不是 blockchain 的延续，我们首先检查其复杂程度（复杂性是链的长度）是否比我们的大，TODO</p>\n<p>然后我们开始随后请求来自先前块提供替代链头的节点。如果我们来得深入k插槽前，替代链被拒绝。否则，一旦我们到达我们连锁店中​​存在的区块，替代链就会被添加到存储区。从国家的角度来看，我们存储和维护所有可行的替代链。如果看起来一个替代链比主链更长，那么它们被替换，使替代链成为新的主链。</p>\n<h2>补充部分</h2>\n<h3>Slotting</h3>\n<p>我们使用的共识方案依赖于正确的 slot。更具体地说，它依赖于系统中的节点可以访问的当前时间（小的偏差是可接受的），然后用于确定何时开始和结束任何特定的 slot，并且在该 slot 执行特定的动作。</p>\n<p>系统开始时间是 <code>(0,0)</code> slot 的时间戳（即，第0 epoch 的第0slot）。</p>\n<h2>P2P 网络</h2>\n<h3>Peer 发现</h3>\n<p>我们使用 Kademlia DHT 进行对等节点的发现。这是基于 <a href=\"https://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf\">Kademlia: 基于 XOR 度量的 P2P 信息系统</a> 的哈希表的通用解决方案。</p>\n<p>简言之，在 Kademlia 网络的每个节点都被提供一个 <code>160</code> 字节的随机生成的 id。节点之间的距离由 <code>XOR</code> 确定。网络以这样的方式组织：节点对于每个相对距离：<code>2^i &#x3C; d &#x3C;= 2^(i+1)</code> 只知道 <code>K</code> (在最初的客户端实现中 <code>K=7</code>)。</p>\n<p>初始对等节点通过<a href=\"https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia/Implementation.hs#L194\">发送</a> Kademlia 的 <code>FIND_NODE</code> 信息完成，它带有以自己节点 ID 作为<a href=\"https://github.com/input-output-hk/cardano-sl/blob/43a2d079a026b90ba860e79b5be52d1337e26c6f/src/Pos/Constants.hs#L89\">预先配置的一组节点</a>以及通过用户命令行输入的节点的参数。我们的实现中会一次<a href=\"https://github.com/input-output-hk/cardano-sl/blob/43a2d079a026b90ba860e79b5be52d1337e26c6f/infra/Pos/DHT/Real/Real.hs#L228\">发送</a>这个请求给所有已知的对等节点，然后等待第一个回复。</p>\n<p>客户端运行时，每个 Kademlia 协议收集对等节点。已知对等节点在后续启动之间保存，<a href=\"https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia.hs#L197\">恢复</a>。对于每个对等体，我们保存其<a href=\"https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia/Types.hs#L42\">主机和端口号</a>，以及它们的<a href=\"https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia/Types.hs#L70\">节点 id</a>。</p>\n<h3>Messaging</h3>\n<p>Kademlia 已经提供了已知节点的概念。这样的节点可以被称为<em>邻居</em>。要将消息发送到网络上的所有节点，你可以发送给邻居，它们会将其发送给它们的邻居，依次类推。但有时候我们可能不需要在整个网络上传播消息，而是只将消息发送给邻居。因此我们有三种类型的发送消息：</p>\n<ul>\n<li>发送给一个节点，</li>\n<li>发送给邻居，</li>\n<li>发送给网络。</li>\n</ul>\n<h4>消息类型</h4>\n<p>为了处理这个，使用三种消息头，并且有两种消息：</p>\n<ul>\n<li>简单：发送给一个同伴。</li>\n<li>广播：试图发送到整个网络，迭代地发送消息到邻居。</li>\n</ul>\n<p>广播消息在检索（在处理之前）重新发送给邻居。而且，它们会通过 LRU 缓存检查，已经收到的消息会被忽略。</p>\n<h3>领导者和富人计算（LRC）</h3>\n<p>『Slot 领导者』和『富人』是乌洛波罗斯权益证明算法的重要概念。</p>\n<ul>\n<li>\n<p>Slot 领导者：当前 epoch（当前 epoch 的每个 slot） 的 slot 领导者是在而当前 epoch 开始时通过<a href=\"/cardano/proof-of-stake/#%E8%BF%BD%E9%9A%8F%E4%B8%AD%E6%9C%AC%E8%81%AA\">追随中本聪</a>（FTS）计算的。FTS 使用 <code>shared seed</code>，它是前一个 epoch <a href=\"/cardano/proof-of-stake/#%E5%A4%9A%E6%96%B9%E8%AE%A1%E7%AE%97\">多方计算</a>（MPC）算法的结果：MPC 结果中，一些节点揭露它们的 种子，这些种子的 <code>xor</code> 称为 <code>shared seed</code>。</p>\n</li>\n<li>\n<p>富人：只有已经发送 VSS 证书并且有足够权益的节点才能参与 MPC 算法。在 epoch 的开始，节点必须知道所有潜在的参与者以在这个 epoch 中验证 MPC 消息。富人也是在当前 epoch 的开始计算的。</p>\n</li>\n</ul>\n<p>富人对于其他组件也很重要；例如，更新系统使用富人判断节点是否可以发布更新协议和投票。</p>\n<p>有两种计算富人的方法：</p>\n<ul>\n<li>考虑共同权益 </li>\n<li>考虑委派权益（乌洛波洛斯提供委派自己权益给其他节点的机会，更多信息请参阅<a href=\"/cardano/differences/#%E6%9D%83%E7%9B%8A%E5%A7%94%E6%B4%BE\">委派章节</a>。</li>\n</ul>\n<p>MPC 和更新系统组件需要具有委派权益的富人，但不需要拥有共同权益的委派组成。</p>\n<h2>常量</h2>\n<p>卡尔达诺结算层使用一些基础常量。他们的值经过了协议原作者和独立安全评论员的讨论，因此强烈推荐可选客户端使用这些常量。 </p>\n<p>这些常量在\n<a href=\"https://github.com/input-output-hk/cardano-sl/blob/bf5dd592b7bf77a68bf71314718dc7a8d5cc8877/core/constants.yaml\"><code>constants.yaml</code> 配置文件</a>\n中定义，分为生产环境和开发环境。</p>","frontmatter":{"path":"/cn/technical","doc_title":"技术细节","author":null,"date":"2017-01-01","language":"cn","label":"docs","keywords":null,"group":"base"}}},{"node":{"id":"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2017-01-13-for-contributors.cn.md absPath of file >>> MarkdownRemark","excerpt":"Redirecting...","html":"<h1>Redirecting...</h1>\n<script>\n    //window.location.replace(\"https://github.com/input-output-hk/cardano-sl/blob/develop/CONTRIBUTING.md\");\n</script>","frontmatter":{"path":"/cn/for-contributors/","doc_title":"对于贡献者","author":null,"date":"2017-01-01","language":"cn","label":"docs","keywords":null,"group":"base"}}},{"node":{"id":"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2017-01-19-glossary.cn.md absPath of file >>> MarkdownRemark","excerpt":"术语表 Ada 我们的货币的名字，为纪念  Ada\nLovelace…","html":"<!-- Reviewed at d0d6c2fedefb642744a24b4b0a6d8d7ad11532f6 -->\n<h1>术语表</h1>\n<h2>Ada</h2>\n<p>我们的货币的名字，为纪念 <a href=\"https://en.wikipedia.org/wiki/Ada_Lovelace\">Ada\nLovelace</a> 而命名。</p>\n<h2>地址</h2>\n<p><a href=\"#%E8%8A%82%E7%82%B9\">节点</a>的唯一标示符。请阅读<a href=\"/cardano/addresses/\">卡尔达诺结算层的地址</a>获得更多信息。</p>\n<h2>余额</h2>\n<p>请阅读<a href=\"/cardano/balance-and-stake/\">卡尔达诺结算层的余额和权益</a> 获得解释。</p>\n<h2>区块</h2>\n<p><a href=\"#%E8%B4%A6%E6%9C%AC\">账本</a>的基础元素。请阅读<a href=\"/technical/blocks/\">卡尔达诺区块</a>获取技术细节。</p>\n<h2>区块链</h2>\n<p>请阅读<a href=\"#%E8%B4%A6%E6%9C%AC\">账本</a>。</p>\n<h2>卡尔达诺结算层</h2>\n<p>卡尔达诺 SL (或者说卡尔达诺结算层) 是由 <a href=\"https://iohk.io/team\">IOHK</a> 设计和开发的去中心化加密货币。为纪念 <a href=\"https://en.wikipedia.org/wiki/Gerolamo_Cardano\">Gerolamo Cardano</a> 而命名。</p>\n<h2>掷币</h2>\n<p>掷币协议是允许两方或多方获得均匀随机值的协议。我们使用掷币协议作为 <a href=\"#ssc\">SSC</a> 的基础。请阅读<a href=\"#%E8%AE%BA%E6%96%87\">论文</a>（第36页）以了解掷币协议的更多详情。</p>\n<h2>一致性算法</h2>\n<p>分布式系统对于共享数据集合达成一致观点的一种方式。卡尔达诺结算层使用<a href=\"/cardano/proof-of-stake/\">乌洛波罗斯一致性算法</a>，这是一个基于<a href=\"#%E6%9D%83%E7%9B%8A%E8%AF%81%E6%98%8E\">权益证明</a>的算法。</p>\n<h2>加密货币</h2>\n<p>使用加密协议来生成账本的计算机系统，请阅读<a href=\"/introduction/#cryptocurrency-basics\">加密货币基础</a>了解更多信息。</p>\n<h2>代达罗斯</h2>\n<p>卡尔达诺结算层钱包应用。 它为用户提供一个用户界面, 用户可以管理，发送，收取资金等等。请阅读<a href=\"/technical/wallet-frontend/\">卡尔达诺结算层钱包应用前端</a>获取更多信息。</p>\n<h2>去中心化</h2>\n<p>通过独立节点进行交互操作的计算机系统的概念。在维护共享数据集合，如账本的情况下，需要对数据的一致性和可靠性达成共识。</p>\n<h2>Epoch</h2>\n<p>我们将知道谁有权利在每个 slot 中生成一个区块的更长的时间段。请阅读<a href=\"#%E8%AE%BA%E6%96%87\">论文</a>（第3页）了解技术细节。</p>\n<h2>追随中本聪</h2>\n<p>一种随机选择权益所有者在区块链中建立一个新区块的机制，根据协议中的股份数量，按比例获得选举机会。</p>\n<h2>保证输出交付</h2>\n<p>保证输出交付是一种机制，能证明诚实方能保证成功完成多方计算（MPC）。我们在 <a href=\"#ssc\">SSC</a> 中使用 G.O.D.</p>\n<h2>诚实的大多数</h2>\n<p>诚实的大多数是指诚实的参与者数量严格大于攻击者数量的情况，即至少 50% + 1 是诚实的大多数。</p>\n<h2>Kademlia</h2>\n<p>请阅读<a href=\"#%E5%AF%B9%E7%AD%89%E7%82%B9%E5%8F%91%E7%8E%B0\">对等点发现</a>。</p>\n<h2>领导者选举</h2>\n<p>挑选谁将在下一个 epoch 生成区块的过程。将依据领导者的股权比例选出（参见<a href=\"#%E6%9D%83%E7%9B%8A%E8%AF%81%E6%98%8E\">权益证明</a>, <a href=\"#%E8%BF%BD%E9%9A%8F%E4%B8%AD%E6%9C%AC%E8%81%AA%E7%AE%97%E6%B3%95\">追随中本聪算法</a>)。</p>\n<h2>账本</h2>\n<p>个人所拥有的价值的数据集合。请阅读<a href=\"#%E8%AE%BA%E6%96%87\">论文</a>了解技术细节。</p>\n<h2>Lovelace</h2>\n<p>我们的货币的最小单位的名称。为纪念 <a href=\"https://en.wikipedia.org/wiki/Ada_Lovelace\">Ada\nLovelace</a> 而命名。</p>\n<h2>铸币</h2>\n<p>在<a href=\"/introduction/#%E6%9D%83%E7%9B%8A%E8%AF%81%E6%98%8E%E5%92%8C%E9%93%B8%E5%B8%81\">权益证明和铸币</a>系统中生成新区块的过程。</p>\n<h2>节点</h2>\n<p>参与分布式协议系统的计算机程序。请阅读<a href=\"/technical/#%E9%AB%98%E5%B1%82%E6%AC%A1%E6%A6%82%E8%BF%B0\">高层次概述</a>获取更多细节。</p>\n<h2>论文</h2>\n<p>官方协议论文：<a href=\"https://eprint.iacr.org/2016/889\">乌洛波罗斯：一个可证安全的权益证明区块链协议</a>。请注意，卡尔达诺结算层的实现与论文的实现不同，<a href=\"/cardano/differences/\">请阅读差异</a>以了解详情。</p>\n<h2>节点发现</h2>\n<p>节点运行后找到其他节点的方法。我们使用的节点发现基于 Kademlia DHT。请阅读 <a href=\"https://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf\"> Kademlia\n论文</a>获得技术细节。</p>\n<h2>Plutus</h2>\n<p>在卡尔达诺中定义智能协议的强类型纯函数式语言。请阅读 <a href=\"/technical/plutus/introduction/\">Plutus</a> 获取更多细节。</p>\n<h2>权益证明</h2>\n<p>乌洛波罗斯权益证明算法是<a href=\"#%E8%AE%BA%E6%96%87\">协议</a>中最重要的部分。它定义了<a href=\"#%E8%8A%82%E7%82%B9\">节点</a>对<a href=\"#%E8%B4%A6%E6%9C%AC\">账本</a>状态达成共识的方式。请阅读<a href=\"/cardano/proof-of-stake/\">乌洛波罗斯权益证明算法</a>获取更多细节。</p>\n<h2>PVSS</h2>\n<p>公开验证密钥共享模式 (Publicly Verifiable Secret Sharing)是我们在 <a href=\"#ssc\">SSC</a> 中使用的密码方案。请阅读<a href=\"/technical/pvss/\">卡尔达诺结算层 PVSS</a> 获取更多细节。</p>\n<h2>富人</h2>\n<p>有足够股权参与一些行动的权益所有人。具体来说，有三种类型的动作：随机性生成（<a href=\"/technical/leader-selection/\">slot 领导者选举过程</a>），<a href=\"/technical/delegation/#%E9%87%8D%E9%87%8F%E7%BA%A7%E6%9D%83%E7%9B%8A%E5%A7%94%E6%B4%BE\">重量级权益委派</a>，<a href=\"/cardano/update-mechanism/#%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9B%B4%E6%96%B0%EF%BC%9A%E7%AD%BE%E7%BD%B2%E5%92%8C%E5%AE%A3%E5%B8%83\">更新提案的投票</a>。</p>\n<h2>签名</h2>\n<p>一种用来生成我们在<a href=\"#%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81\">加密货币</a>中使用的保证任何类型信息真实性证据的方法。</p>\n<h2>Slot</h2>\n<p>在不同节点上显著大于预期的不同时钟数的一小段物理时间。请阅读<a href=\"#%E8%AE%BA%E6%96%87\">论文</a>(第4页)获取更多技术细节。</p>\n<h2>Slot 领导者</h2>\n<p>slot 领导者是一个被选举为有权在当前 slot 创建区块的节点。请阅读<a href=\"#%E8%AE%BA%E6%96%87\">论文</a>(第7页)获取更多技术细节。</p>\n<h2>SSC</h2>\n<p>SSC (Shared Seed Computation) 是 <a href=\"#%E9%A2%86%E5%AF%BC%E8%80%85%E9%80%89%E4%B8%BE\">Slot 领导者选举</a>的一部分。这部分被实现为<a href=\"#%E4%BF%9D%E8%AF%81%E8%BE%93%E5%87%BA%E4%BA%A4%E4%BB%98\">保证输出交付</a>的<a href=\"#%E6%8E%B7%E5%B8%81\">掷币</a>协议。作为 SSC 的结果，我们得到一个将用于<a href=\"#%E8%BF%BD%E9%9A%8F%E4%B8%AD%E6%9C%AC%E8%81%AA\">追随中本聪</a>机制的随机算法。</p>\n<h2>权益</h2>\n<p>请阅读 <a href=\"/cardano/balance-and-stake/\">卡尔达诺结算层的余额和权益</a> 章节获取解释。</p>\n<h2>权益所有人</h2>\n<p>一个拥有正数股权的节点。</p>\n<h2>转账</h2>\n<p>表示价值转移的数据。请阅读<a href=\"/cardano/transactions/\">卡尔达诺结算层的转账</a>获取更多细节。</p>\n<h2>转账费用</h2>\n<p>请阅读<a href=\"/cardano/transaction-fees/\">卡尔达诺结算层转账费用</a>章节获取解释。</p>","frontmatter":{"path":"/cn/glossary","doc_title":"术语表","author":null,"date":"2017-01-01","language":"cn","label":"docs","keywords":null,"group":"base"}}}]}},"pathContext":{}}