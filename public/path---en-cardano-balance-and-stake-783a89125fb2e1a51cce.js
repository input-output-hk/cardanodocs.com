webpackJsonp([0xde605d897c7b],{417:function(e,n){e.exports={data:{markdownRemark:{html:'<!-- Reviewed at e070e675764738b5190b2f93424de403f1937216 -->\n<h1>How Balance and Stake work within the Cardano SL</h1>\n<p>There are two important concepts within the Cardano SL: these are <strong>balance</strong> and <strong>stake</strong>. This chapter\nexplains the difference between these two concepts and how they both function.</p>\n<h3>Balance</h3>\n<p>Balance is the real amount of coins that each user has. When you install a Daedalus wallet on your computer\nand perform the <a href="/timeline/bootstrap/">Ada redemption</a> process, you receive an amount of Ada. This amount of\nAda is called your balance. You can send an amount of Ada (within this balance), to other users, as well as\nreceive any amount of Ada from other users.</p>\n<!-- end -->\n<p>Thus, when we refer to the balance, we are talking about the user\'s actual money.</p>\n<h3>Stake</h3>\n<p>Unlike balance (the real amount of money you have),\nstake is a key element of the entire financial power of Cardano SL. Stake gives a user the\npower to control various Cardano SL algorithm parts, for example: being the <a href="/glossary/#slot-leader">slot leader</a>,\nvoting in the <a href="/cardano/update-mechanism/">Update system</a>, taking part in <a href="/technical/leader-selection/#follow-the-satoshi">MPC/SSC</a>. This is why all thresholds in the Cardano SL protocol are expressed in terms of stake, rather than balance.</p>\n<p>Thus, when we refer to the stake, we are talking about the user\'s ability to control the actual Cardano SL. For more information about stake, please refer to the following <a href="/glossary/#paper">paper</a>. </p>\n<h3>The Relationship Between Balance and Stake</h3>\n<p>Every coin in Cardano SL is associated with a balance and with a stake. We use <a href="/cardano/transactions/#design">transaction output</a>\nto associate coin <code>C</code> with a user\'s balance, and we use <a href="/cardano/transactions/#stake-distribution">stake distribution</a>\nto associate coin <code>C</code> with a user\'s stake.</p>\n<p>Note: It is possible to change the association between coin and stake using what is known as <a href="/technical/delegation/">stake delegation</a>.</p>',frontmatter:{path:"/en/cardano/balance-and-stake/",doc_title:"Balance and Stake",author:null,date:null,label:"docs",language:"en",keywords:null}},allMarkdownRemark:{edges:[{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/content/welcome-text.cn.md absPath of file >>> MarkdownRemark",excerpt:"Dear reader, the purpose of this documentation is to provide you with understanding of the first layer of Cardano Platform stack, the…",html:'<p>Dear reader, the purpose of this documentation is to provide you with understanding of the first layer of Cardano Platform stack, the Settlement Layer. If you have an understanding of what Settlement Layer is, we suggest you first read <a href="/cardano/differences/">Differences Between the Paper and the Implementation</a>, and then move on to documentation on <a href="/technical/protocols/csl-application-level/">protocols and implementation</a>.</p>\n<p>This documentation targets IOHK developers, third party software developers, auditors, and consultants who collaborate on implementing Cardano Settlement Layer or use Cardano Settlement Layer reference implementation.</p>',frontmatter:{path:"/en/welcome-text/",doc_title:null,author:null,date:null,language:"en",label:"content",keywords:"welcome"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/2017-01-04-installation.en.md absPath of file >>> MarkdownRemark",excerpt:"\n# Installation\n\n## Supported Platforms\n\nSupported platforms are Windows, macOS and Linux. There are\n[installers for Windows and macOS](https://daedaluswallet.io/#download),\nwhich include a main node and [Daedalus wallet](https://github.com/input-output-hk/daedalus).\n\nLinux installer is going to be released soon. Currently, there are two options to\nget Cardano SL on Linux:\n",html:'<h1>Installation</h1>\n<h2>Supported Platforms</h2>\n<p>Supported platforms are Windows, macOS and Linux. There are\n<a href="https://daedaluswallet.io/#download">installers for Windows and macOS</a>,\nwhich include a main node and <a href="https://github.com/input-output-hk/daedalus">Daedalus wallet</a>.</p>\n<p>Linux installer is going to be released soon. Currently, there are two options to\nget Cardano SL on Linux:</p>\n<!-- end -->\n<ol>\n<li>Build from the source code (recommended). Please refer to <a href="https://github.com/input-output-hk/cardano-sl/blob/develop/docs/how-to/build-cardano-sl-and-daedalus-from-source-code.md">How to Build Cardano SL and Daedalus from\nSource Code</a> manual.</li>\n<li>\n<p>Use <strong>unofficial</strong> packages for Arch Linux:</p>\n<ul>\n<li><a href="https://aur.archlinux.org/packages/cardano-sl/">cardano-sl</a></li>\n<li><a href="https://aur.archlinux.org/packages/daedalus-bridge/">daedalus-bridge</a></li>\n<li><a href="https://aur.archlinux.org/packages/daedalus/">daedalus</a></li>\n</ul>\n</li>\n</ol>',frontmatter:{path:"/en/installation/",doc_title:"Installation",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/2017-01-13-for-contributors.en.md absPath of file >>> MarkdownRemark",excerpt:"Redirecting...",html:'<h1>Redirecting...</h1>\n<script>\n    // window.location.replace("https://github.com/input-output-hk/cardano-sl/blob/develop/CONTRIBUTING.md");\n</script>',frontmatter:{path:"/en/for-contributors/",doc_title:"For Contributors",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/2017-01-19-glossary.en.md absPath of file >>> MarkdownRemark",excerpt:"\n<!-- Reviewed at d0d6c2fedefb642744a24b4b0a6d8d7ad11532f6 -->\n\n# Glossary\n\n## Ada\n\nThe name of our currency, named in honor of [Ada\nLovelace](https://en.wikipedia.org/wiki/Ada_Lovelace).\n\n## Address\n\nThe unique identifier of a [node](#node). Please read about [Addresses in\nCardano SL](/cardano/addresses/) for more details.\n\n## Balance\n\nPlease read about [Balance and Stake in Cardano SL](/cardano/balance-and-stake/)\nfor explanation.\n\n## Block\n\nA fundamental part of a [Ledger](#ledger). Please read about [Blocks in Cardano\nSL](/technical/blocks/) for technical details.\n\n## Blockchain\n\nPlease see [Ledger](#ledger).\n\n## Cardano SL\n\nCardano SL (or Cardano Settlement Layer) is a decentralized cryptographic\ncurrency designed and developed by [IOHK](https://iohk.io/team). Named in honor\nof [Gerolamo Cardano](https://en.wikipedia.org/wiki/Gerolamo_Cardano).\n\n## Coin Tossing\n\nA Coin Tossing is a protocol that allows two or more parties to obtain\na uniformly random value. We use Coin Tossing protocol as a base of [SSC](#ssc).\nPlease read [paper](#paper) (page 36) for more details about Coin Tossing.\n\n## Consensus Algorithm\n\nA way for a decentralized system to reach a consistent view on shared\ncollections of data. Cardano SL uses the [Ouroboros Consensus\nAlgorithm](/cardano/proof-of-stake/), which is an algorithm based on\n[Proof of Stake](#proof-of-stake).\n\n## Cryptocurrency\n\nA computer system which uses cryptographic protocols to generate a ledger.\nPlease read about [Cryptocurrency Basics](/introduction/#cryptocurrency-basics)\nfor more details.\n\n## Daedalus\n\nCardano SL wallet application. It provides a GUI for users, so they can access\ntheir funds, send and receive transactions, etc. Please read about [Cardano SL\nWallet Frontend](/technical/wallet-frontend/) for more details.\n\n## Decentralization\n\nA notion of a computer system operating through interaction of independent\nnodes. In case of maintaining a shared data collection such as a ledger, a\nconsensus is required for consistency and reliability of data.\n\n## Epoch\n\nA bigger period of time for which we know in advance who will have the right to\ngenerate a block in each slot. Please read [paper](#paper) (page 3) for\ntechnical details.\n\n## Follow The Satoshi\n\nA mechanism whereby stakeholders are selected at random to forge a new block in\nthe blockchain, with a proportional chance to get elected depending on their\namount of stake in the protocol.\n\n## Guaranteed Output Delivery\n\nGuaranteed output delivery is a mechanism that proves that the honest parties\nare guaranteed to successfully complete the multiparty computation (MPC). We\nuse G.O.D. in [SSC](#ssc).\n\n## Honest Majority\n\nHonest majority is a situation when the number of honest participants is strictly\ngreater than the number of adversaries, i.e. at least 50% + 1. Honest majority \nis assumed by default.\n\n## Kademlia\n\nPlease see [Peer Discovery](#peer-discovery).\n\n## Leader Election\n\nA process of picking who will generate blocks during the next epoch. Leaders are\nelected with a probability proportional to their stake (see [Proof of\nStake](#proof-of-stake), [Follow the Satoshi](#follow-the-satoshi)).\n\n## Ledger\n\nA collection of data that keeps track of value assigned to individuals. Please\nread [paper](#paper) (page 32) for technical details.\n\n## Lovelace\n\nName of a smallest unit of our currency. Named in honor of [Ada\nLovelace](https://en.wikipedia.org/wiki/Ada_Lovelace).\n\n## Minting\n\nA process of a new block creation in [Proof of\nStake](/introduction/#proof-of-stake-and-minting) systems.\n\n## Node\n\nA computer program that participates in a decentralized protocol system. Please\nread [High-level technical overview](/technical/#high-level-overview) for more\ndetails.\n\n## Paper\n\nOfficial protocol report [Ouroboros: A Provably Secure Proof-of-Stake Blockchain\nProtocol](https://eprint.iacr.org/2016/889). Please notice that Cardano SL\nimplementation differs from the paper, [read about\ndifferences](/cardano/differences/) for more details.\n\n## Peer Discovery\n\nA way how a node can find other nodes after running. Peer discovery we use is\nbased on Kademlia DHT. Please read [a Kademlia\npaper](https://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf)\nfor technical details.\n\n## Plutus\n\nStrictly typed pure functional programming language used for defining smart\ncontracts in Cardano. Please read about\n[Plutus](/technical/plutus/introduction/) for more details.\n\n## Proof of Stake\n\nOuroboros Proof of Stake algorithm is the most important part of the [protocol](#paper).\nIt defines the way [nodes](#node) reach consensus about the state of [ledger](#ledger).\nPlease read about [Ouroboros Proof of Stake Algorithm](/cardano/proof-of-stake/)\nfor more details.\n\n## PVSS\n\nPVSS (Publicly Verifiable Secret Sharing) is a cryptographic scheme we use in [SSC](#ssc).\nPlease read about [PVSS implementation in Cardano SL](/technical/pvss/) for more details.\n\n## Richman\n\nStakeholder with stake enough for participation in some action. Particularly,\nthere are three kinds of such actions: randomness generation (for [slot leaders\nelections process](/technical/leader-selection/)),\n[heavyweight stake delegation](/technical/delegation/#heavyweight-delegation)\nand voting for [update proposals](/cardano/update-mechanism/#application-update-sign-and-announce).\n\n## Signing\n\nA way to generate a proof of genuine authenticity of any kind of information we\nuse in [cryptocurrency](#cryptocurrency).\n\n## Slot\n\nA small period of physical time that is significantly larger than the expected\ndifference in clocks on different nodes. Please read [paper](#paper) (page 4) for\ntechnical details.\n\n## Slot Leader\n\nA slot leader is a node which was elected to have a right to create a block in\nthe current slot. Please read [paper](#paper) (page 7) for technical details.\n\n## SSC\n\nSSC (Shared Seed Computation) is a part of [slot leader election](#leader-election)\nprocess. This part is implemented as a [Coin Tossing](#coin-tossing) protocol with\n[Guaranteed Output Delivery](#guaranteed-output-delivery). As a result of SSC we get\na randomness which will be used in [Follow The Satoshi](#follow-the-satoshi) mechanism.\n\n## Stake\n\nPlease read about [Balance and Stake in Cardano SL](/cardano/balance-and-stake/)\nfor explanation.\n\n## Stakeholder\n\nA node with a positive stake.\n\n## Transaction\n\nThe data that represents the act of transferring value. Please read about\n[Transactions in Cardano SL](/cardano/transactions/) for more details.\n\n## Transaction Fees\n\nPlease read about [Transaction Fees in Cardano SL](/cardano/transaction-fees/)\nfor explanation.\n",html:'<!-- Reviewed at d0d6c2fedefb642744a24b4b0a6d8d7ad11532f6 -->\n<h1>Glossary</h1>\n<h2>Ada</h2>\n<p>The name of our currency, named in honor of <a href="https://en.wikipedia.org/wiki/Ada_Lovelace">Ada\nLovelace</a>.</p>\n<h2>Address</h2>\n<p>The unique identifier of a <a href="#node">node</a>. Please read about <a href="/cardano/addresses/">Addresses in\nCardano SL</a> for more details.</p>\n<h2>Balance</h2>\n<p>Please read about <a href="/cardano/balance-and-stake/">Balance and Stake in Cardano SL</a>\nfor explanation.</p>\n<h2>Block</h2>\n<p>A fundamental part of a <a href="#ledger">Ledger</a>. Please read about <a href="/technical/blocks/">Blocks in Cardano\nSL</a> for technical details.</p>\n<h2>Blockchain</h2>\n<p>Please see <a href="#ledger">Ledger</a>.</p>\n<h2>Cardano SL</h2>\n<p>Cardano SL (or Cardano Settlement Layer) is a decentralized cryptographic\ncurrency designed and developed by <a href="https://iohk.io/team">IOHK</a>. Named in honor\nof <a href="https://en.wikipedia.org/wiki/Gerolamo_Cardano">Gerolamo Cardano</a>.</p>\n<h2>Coin Tossing</h2>\n<p>A Coin Tossing is a protocol that allows two or more parties to obtain\na uniformly random value. We use Coin Tossing protocol as a base of <a href="#ssc">SSC</a>.\nPlease read <a href="#paper">paper</a> (page 36) for more details about Coin Tossing.</p>\n<h2>Consensus Algorithm</h2>\n<p>A way for a decentralized system to reach a consistent view on shared\ncollections of data. Cardano SL uses the <a href="/cardano/proof-of-stake/">Ouroboros Consensus\nAlgorithm</a>, which is an algorithm based on\n<a href="#proof-of-stake">Proof of Stake</a>.</p>\n<h2>Cryptocurrency</h2>\n<p>A computer system which uses cryptographic protocols to generate a ledger.\nPlease read about <a href="/introduction/#cryptocurrency-basics">Cryptocurrency Basics</a>\nfor more details.</p>\n<h2>Daedalus</h2>\n<p>Cardano SL wallet application. It provides a GUI for users, so they can access\ntheir funds, send and receive transactions, etc. Please read about <a href="/technical/wallet-frontend/">Cardano SL\nWallet Frontend</a> for more details.</p>\n<h2>Decentralization</h2>\n<p>A notion of a computer system operating through interaction of independent\nnodes. In case of maintaining a shared data collection such as a ledger, a\nconsensus is required for consistency and reliability of data.</p>\n<h2>Epoch</h2>\n<p>A bigger period of time for which we know in advance who will have the right to\ngenerate a block in each slot. Please read <a href="#paper">paper</a> (page 3) for\ntechnical details.</p>\n<h2>Follow The Satoshi</h2>\n<p>A mechanism whereby stakeholders are selected at random to forge a new block in\nthe blockchain, with a proportional chance to get elected depending on their\namount of stake in the protocol.</p>\n<h2>Guaranteed Output Delivery</h2>\n<p>Guaranteed output delivery is a mechanism that proves that the honest parties\nare guaranteed to successfully complete the multiparty computation (MPC). We\nuse G.O.D. in <a href="#ssc">SSC</a>.</p>\n<h2>Honest Majority</h2>\n<p>Honest majority is a situation when the number of honest participants is strictly\ngreater than the number of adversaries, i.e. at least 50% + 1. Honest majority\nis assumed by default.</p>\n<h2>Kademlia</h2>\n<p>Please see <a href="#peer-discovery">Peer Discovery</a>.</p>\n<h2>Leader Election</h2>\n<p>A process of picking who will generate blocks during the next epoch. Leaders are\nelected with a probability proportional to their stake (see <a href="#proof-of-stake">Proof of\nStake</a>, <a href="#follow-the-satoshi">Follow the Satoshi</a>).</p>\n<h2>Ledger</h2>\n<p>A collection of data that keeps track of value assigned to individuals. Please\nread <a href="#paper">paper</a> (page 32) for technical details.</p>\n<h2>Lovelace</h2>\n<p>Name of a smallest unit of our currency. Named in honor of <a href="https://en.wikipedia.org/wiki/Ada_Lovelace">Ada\nLovelace</a>.</p>\n<h2>Minting</h2>\n<p>A process of a new block creation in <a href="/introduction/#proof-of-stake-and-minting">Proof of\nStake</a> systems.</p>\n<h2>Node</h2>\n<p>A computer program that participates in a decentralized protocol system. Please\nread <a href="/technical/#high-level-overview">High-level technical overview</a> for more\ndetails.</p>\n<h2>Paper</h2>\n<p>Official protocol report <a href="https://eprint.iacr.org/2016/889">Ouroboros: A Provably Secure Proof-of-Stake Blockchain\nProtocol</a>. Please notice that Cardano SL\nimplementation differs from the paper, <a href="/cardano/differences/">read about\ndifferences</a> for more details.</p>\n<h2>Peer Discovery</h2>\n<p>A way how a node can find other nodes after running. Peer discovery we use is\nbased on Kademlia DHT. Please read <a href="https://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf">a Kademlia\npaper</a>\nfor technical details.</p>\n<h2>Plutus</h2>\n<p>Strictly typed pure functional programming language used for defining smart\ncontracts in Cardano. Please read about\n<a href="/technical/plutus/introduction/">Plutus</a> for more details.</p>\n<h2>Proof of Stake</h2>\n<p>Ouroboros Proof of Stake algorithm is the most important part of the <a href="#paper">protocol</a>.\nIt defines the way <a href="#node">nodes</a> reach consensus about the state of <a href="#ledger">ledger</a>.\nPlease read about <a href="/cardano/proof-of-stake/">Ouroboros Proof of Stake Algorithm</a>\nfor more details.</p>\n<h2>PVSS</h2>\n<p>PVSS (Publicly Verifiable Secret Sharing) is a cryptographic scheme we use in <a href="#ssc">SSC</a>.\nPlease read about <a href="/technical/pvss/">PVSS implementation in Cardano SL</a> for more details.</p>\n<h2>Richman</h2>\n<p>Stakeholder with stake enough for participation in some action. Particularly,\nthere are three kinds of such actions: randomness generation (for <a href="/technical/leader-selection/">slot leaders\nelections process</a>),\n<a href="/technical/delegation/#heavyweight-delegation">heavyweight stake delegation</a>\nand voting for <a href="/cardano/update-mechanism/#application-update-sign-and-announce">update proposals</a>.</p>\n<h2>Signing</h2>\n<p>A way to generate a proof of genuine authenticity of any kind of information we\nuse in <a href="#cryptocurrency">cryptocurrency</a>.</p>\n<h2>Slot</h2>\n<p>A small period of physical time that is significantly larger than the expected\ndifference in clocks on different nodes. Please read <a href="#paper">paper</a> (page 4) for\ntechnical details.</p>\n<h2>Slot Leader</h2>\n<p>A slot leader is a node which was elected to have a right to create a block in\nthe current slot. Please read <a href="#paper">paper</a> (page 7) for technical details.</p>\n<h2>SSC</h2>\n<p>SSC (Shared Seed Computation) is a part of <a href="#leader-election">slot leader election</a>\nprocess. This part is implemented as a <a href="#coin-tossing">Coin Tossing</a> protocol with\n<a href="#guaranteed-output-delivery">Guaranteed Output Delivery</a>. As a result of SSC we get\na randomness which will be used in <a href="#follow-the-satoshi">Follow The Satoshi</a> mechanism.</p>\n<h2>Stake</h2>\n<p>Please read about <a href="/cardano/balance-and-stake/">Balance and Stake in Cardano SL</a>\nfor explanation.</p>\n<h2>Stakeholder</h2>\n<p>A node with a positive stake.</p>\n<h2>Transaction</h2>\n<p>The data that represents the act of transferring value. Please read about\n<a href="/cardano/transactions/">Transactions in Cardano SL</a> for more details.</p>\n<h2>Transaction Fees</h2>\n<p>Please read about <a href="/cardano/transaction-fees/">Transaction Fees in Cardano SL</a>\nfor explanation.</p>\n<!-- end -->',frontmatter:{path:"/en/glossary/",doc_title:"Glossary",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/AAA.en.md absPath of file >>> MarkdownRemark",excerpt:"\n##This is Post 1\n\npost1 one Cillum enim sint excepteur laborum mollit nulla dolore dolore id pariatur. Ea ullamco ex aute aliquip deserunt. Quis deserunt fugiat adipisicing ea cupidatat. Duis anim nisi officia sit irure. Esse Lorem exercitation ex ut.\n",html:"<h2>This is Post 1</h2>\n<p>post1 one Cillum enim sint excepteur laborum mollit nulla dolore dolore id pariatur. Ea ullamco ex aute aliquip deserunt. Quis deserunt fugiat adipisicing ea cupidatat. Duis anim nisi officia sit irure. Esse Lorem exercitation ex ut.</p>\n<!-- end -->\n<p>Tempor duis nisi ipsum deserunt Lorem duis voluptate aliqua deserunt ipsum occaecat consectetur velit ipsum. Minim eu eu culpa deserunt sit quis reprehenderit velit sunt esse non irure quis velit. Incididunt magna ipsum anim cillum excepteur proident excepteur aliquip tempor.</p>",frontmatter:{path:"/en/post-1",doc_title:"Post 1",author:"Charles Hoskinson",date:"06-09-2018",language:"en",label:"docs",keywords:"post1 one"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/content/welcome-text.en.md absPath of file >>> MarkdownRemark",excerpt:"亲爱的读者，本文档的目的是让您对于 Cardano 平台技术栈第一层即结算层有所了解。如果您理解了结算层是什么，我们建议您先阅读论文和实现的差异，然后再阅读协议和实现的文档。 本文档目标读者是 IOHK…",html:"<p>亲爱的读者，本文档的目的是让您对于 Cardano 平台技术栈第一层即结算层有所了解。如果您理解了结算层是什么，我们建议您先阅读论文和实现的差异，然后再阅读协议和实现的文档。</p>\n<p>本文档目标读者是 IOHK 的开发人员，第三方软件开发人员，审计和致力于实现卡尔达诺结算层或使用卡尔达诺结算层参考实现的咨询人员。</p>",frontmatter:{path:"/cn/welcome-text/",doc_title:null,author:null,date:null,language:"cn",label:"content",keywords:"welcome"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2017-01-19-glossary.cn.md absPath of file >>> MarkdownRemark",excerpt:"\n<!-- Reviewed at d0d6c2fedefb642744a24b4b0a6d8d7ad11532f6 -->\n\n# glossary foo\n\n## Ada\n\nThe name of our currency, named in honor of [Ada\nLovelace](https://en.wikipedia.org/wiki/Ada_Lovelace).\n\n## Address\n\nThe unique identifier of a [node](#node). Please read about [Addresses in\nCardano SL](/cardano/addresses/) for more details.\n\n",html:'<!-- Reviewed at d0d6c2fedefb642744a24b4b0a6d8d7ad11532f6 -->\n<h1>glossary foo</h1>\n<h2>Ada</h2>\n<p>The name of our currency, named in honor of <a href="https://en.wikipedia.org/wiki/Ada_Lovelace">Ada\nLovelace</a>.</p>\n<h2>Address</h2>\n<p>The unique identifier of a <a href="#node">node</a>. Please read about <a href="/cardano/addresses/">Addresses in\nCardano SL</a> for more details.</p>\n<!-- end -->\n<h2>Balance</h2>\n<p>Please read about <a href="/cardano/balance-and-stake/">Balance and Stake in Cardano SL</a>\nfor explanation.</p>\n<h2>Block</h2>\n<p>A fundamental part of a <a href="#ledger">Ledger</a>. Please read about <a href="/technical/blocks/">Blocks in Cardano\nSL</a> for technical details.</p>\n<h2>Blockchain</h2>\n<p>Please see <a href="#ledger">Ledger</a>.</p>\n<h2>Cardano SL</h2>\n<p>Cardano SL (or Cardano Settlement Layer) is a decentralized cryptographic\ncurrency designed and developed by <a href="https://iohk.io/team">IOHK</a>. Named in honor\nof <a href="https://en.wikipedia.org/wiki/Gerolamo_Cardano">Gerolamo Cardano</a>.</p>\n<h2>Coin Tossing</h2>\n<p>A Coin Tossing is a protocol that allows two or more parties to obtain\na uniformly random value. We use Coin Tossing protocol as a base of <a href="#ssc">SSC</a>.\nPlease read <a href="#paper">paper</a> (page 36) for more details about Coin Tossing.</p>\n<h2>Consensus Algorithm</h2>\n<p>A way for a decentralized system to reach a consistent view on shared\ncollections of data. Cardano SL uses the <a href="/cardano/proof-of-stake/">Ouroboros Consensus\nAlgorithm</a>, which is an algorithm based on\n<a href="#proof-of-stake">Proof of Stake</a>.</p>\n<h2>Cryptocurrency</h2>\n<p>A computer system which uses cryptographic protocols to generate a ledger.\nPlease read about <a href="/introduction/#cryptocurrency-basics">Cryptocurrency Basics</a>\nfor more details.</p>\n<h2>Daedalus</h2>\n<p>Cardano SL wallet application. It provides a GUI for users, so they can access\ntheir funds, send and receive transactions, etc. Please read about <a href="/technical/wallet-frontend/">Cardano SL\nWallet Frontend</a> for more details.</p>\n<h2>Decentralization</h2>\n<p>A notion of a computer system operating through interaction of independent\nnodes. In case of maintaining a shared data collection such as a ledger, a\nconsensus is required for consistency and reliability of data.</p>\n<h2>Epoch</h2>\n<p>A bigger period of time for which we know in advance who will have the right to\ngenerate a block in each slot. Please read <a href="#paper">paper</a> (page 3) for\ntechnical details.</p>\n<h2>Follow The Satoshi</h2>\n<p>A mechanism whereby stakeholders are selected at random to forge a new block in\nthe blockchain, with a proportional chance to get elected depending on their\namount of stake in the protocol.</p>\n<h2>Guaranteed Output Delivery</h2>\n<p>Guaranteed output delivery is a mechanism that proves that the honest parties\nare guaranteed to successfully complete the multiparty computation (MPC). We\nuse G.O.D. in <a href="#ssc">SSC</a>.</p>\n<h2>Honest Majority</h2>\n<p>Honest majority is a situation when the number of honest participants is strictly\ngreater than the number of adversaries, i.e. at least 50% + 1. Honest majority\nis assumed by default.</p>\n<h2>Kademlia</h2>\n<p>Please see <a href="#peer-discovery">Peer Discovery</a>.</p>\n<h2>Leader Election</h2>\n<p>A process of picking who will generate blocks during the next epoch. Leaders are\nelected with a probability proportional to their stake (see <a href="#proof-of-stake">Proof of\nStake</a>, <a href="#follow-the-satoshi">Follow the Satoshi</a>).</p>\n<h2>Ledger</h2>\n<p>A collection of data that keeps track of value assigned to individuals. Please\nread <a href="#paper">paper</a> (page 32) for technical details.</p>\n<h2>Lovelace</h2>\n<p>Name of a smallest unit of our currency. Named in honor of <a href="https://en.wikipedia.org/wiki/Ada_Lovelace">Ada\nLovelace</a>.</p>\n<h2>Minting</h2>\n<p>A process of a new block creation in <a href="/introduction/#proof-of-stake-and-minting">Proof of\nStake</a> systems.</p>\n<h2>Node</h2>\n<p>A computer program that participates in a decentralized protocol system. Please\nread <a href="/technical/#high-level-overview">High-level technical overview</a> for more\ndetails.</p>\n<h2>Paper</h2>\n<p>Official protocol report <a href="https://eprint.iacr.org/2016/889">Ouroboros: A Provably Secure Proof-of-Stake Blockchain\nProtocol</a>. Please notice that Cardano SL\nimplementation differs from the paper, <a href="/cardano/differences/">read about\ndifferences</a> for more details.</p>\n<h2>Peer Discovery</h2>\n<p>A way how a node can find other nodes after running. Peer discovery we use is\nbased on Kademlia DHT. Please read <a href="https://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf">a Kademlia\npaper</a>\nfor technical details.</p>\n<h2>Plutus</h2>\n<p>Strictly typed pure functional programming language used for defining smart\ncontracts in Cardano. Please read about\n<a href="/technical/plutus/introduction/">Plutus</a> for more details.</p>\n<h2>Proof of Stake</h2>\n<p>Ouroboros Proof of Stake algorithm is the most important part of the <a href="#paper">protocol</a>.\nIt defines the way <a href="#node">nodes</a> reach consensus about the state of <a href="#ledger">ledger</a>.\nPlease read about <a href="/cardano/proof-of-stake/">Ouroboros Proof of Stake Algorithm</a>\nfor more details.</p>\n<h2>PVSS</h2>\n<p>PVSS (Publicly Verifiable Secret Sharing) is a cryptographic scheme we use in <a href="#ssc">SSC</a>.\nPlease read about <a href="/technical/pvss/">PVSS implementation in Cardano SL</a> for more details.</p>\n<h2>Richman</h2>\n<p>Stakeholder with stake enough for participation in some action. Particularly,\nthere are three kinds of such actions: randomness generation (for <a href="/technical/leader-selection/">slot leaders\nelections process</a>),\n<a href="/technical/delegation/#heavyweight-delegation">heavyweight stake delegation</a>\nand voting for <a href="/cardano/update-mechanism/#application-update-sign-and-announce">update proposals</a>.</p>\n<h2>Signing</h2>\n<p>A way to generate a proof of genuine authenticity of any kind of information we\nuse in <a href="#cryptocurrency">cryptocurrency</a>.</p>\n<h2>Slot</h2>\n<p>A small period of physical time that is significantly larger than the expected\ndifference in clocks on different nodes. Please read <a href="#paper">paper</a> (page 4) for\ntechnical details.</p>\n<h2>Slot Leader</h2>\n<p>A slot leader is a node which was elected to have a right to create a block in\nthe current slot. Please read <a href="#paper">paper</a> (page 7) for technical details.</p>\n<h2>SSC</h2>\n<p>SSC (Shared Seed Computation) is a part of <a href="#leader-election">slot leader election</a>\nprocess. This part is implemented as a <a href="#coin-tossing">Coin Tossing</a> protocol with\n<a href="#guaranteed-output-delivery">Guaranteed Output Delivery</a>. As a result of SSC we get\na randomness which will be used in <a href="#follow-the-satoshi">Follow The Satoshi</a> mechanism.</p>\n<h2>Stake</h2>\n<p>Please read about <a href="/cardano/balance-and-stake/">Balance and Stake in Cardano SL</a>\nfor explanation.</p>\n<h2>Stakeholder</h2>\n<p>A node with a positive stake.</p>\n<h2>Transaction</h2>\n<p>The data that represents the act of transferring value. Please read about\n<a href="/cardano/transactions/">Transactions in Cardano SL</a> for more details.</p>\n<h2>Transaction Fees</h2>\n<p>Please read about <a href="/cardano/transaction-fees/">Transaction Fees in Cardano SL</a>\nfor explanation.</p>',frontmatter:{path:"/cn/glossary/",doc_title:"Glossary",author:null,date:null,language:"cn",label:"docs",keywords:"glossary foo"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2018-06-09-post1.cn.md absPath of file >>> MarkdownRemark",excerpt:"\n##This is Post 1\n\npost1 one Cillum enim sint excepteur laborum mollit nulla dolore dolore id pariatur. Ea ullamco ex aute aliquip deserunt. Quis deserunt fugiat adipisicing ea cupidatat. Duis anim nisi officia sit irure. Esse Lorem exercitation ex ut.\n",html:"<h2>This is Post 1</h2>\n<p>post1 one Cillum enim sint excepteur laborum mollit nulla dolore dolore id pariatur. Ea ullamco ex aute aliquip deserunt. Quis deserunt fugiat adipisicing ea cupidatat. Duis anim nisi officia sit irure. Esse Lorem exercitation ex ut.</p>\n<!-- end -->\n<p>Tempor duis nisi ipsum deserunt Lorem duis voluptate aliqua deserunt ipsum occaecat consectetur velit ipsum. Minim eu eu culpa deserunt sit quis reprehenderit velit sunt esse non irure quis velit. Incididunt magna ipsum anim cillum excepteur proident excepteur aliquip tempor.</p>",frontmatter:{path:"/cn/post-1",doc_title:"Post 1",author:"Charles Hoskinson",date:"06-09-2018",language:"cn",label:"docs",keywords:"post1 one"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2019-06-09-post2.cn.md absPath of file >>> MarkdownRemark",excerpt:"\n##This is Post 2\n\npost2 two Tempor duis nisi ipsum deserunt Lorem duis voluptate aliqua deserunt ipsum occaecat consectetur velit ipsum. Minim eu eu culpa deserunt sit quis reprehenderit velit sunt esse non irure quis velit. Incididunt magna ipsum anim cillum excepteur proident excepteur aliquip tempor.\n",html:"<h2>This is Post 2</h2>\n<p>post2 two Tempor duis nisi ipsum deserunt Lorem duis voluptate aliqua deserunt ipsum occaecat consectetur velit ipsum. Minim eu eu culpa deserunt sit quis reprehenderit velit sunt esse non irure quis velit. Incididunt magna ipsum anim cillum excepteur proident excepteur aliquip tempor.</p>\n<!-- end -->\n<p>Cillum enim sint excepteur laborum mollit nulla dolore dolore id pariatur. Ea ullamco ex aute aliquip deserunt. Quis deserunt fugiat adipisicing ea cupidatat. Duis anim nisi officia sit irure. Esse Lorem exercitation ex ut.</p>",
frontmatter:{path:"/cn/post-2",doc_title:"Post 2",author:"Jonny S",date:"06-09-2018",language:"cn",label:"docs",keywords:"post2 two"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-01-07-addresses.en.md absPath of file >>> MarkdownRemark",excerpt:'<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n\n# Addresses in Cardano SL\n\nTo send and receive value, addresses are used in virtually all cryptocurrencies.\nCardano SL supports 3 main types of addresses:\n\n1.  public key address,\n2.  script address,\n3.  redeem address.\n\nPublic key address is a normal address like in any other cryptocurrency. It is\na hashed public key. Read more about public key addresses [below](#public-key-addresses).\n\nScript address is used in so-called "Pay to Script Hash" (P2SH) transactions.\nIt operates autonomously and acts somewhat like a bank deposit: you can send\nmoney to it, but in order to redeem it you have to satisfy certain conditions,\ndetermined by a script associated with the address. The address itself contains\nthe hash of the serialized script. Read more about P2SH [below](#pay-to-script-hash).\n',html:'<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n<h1>Addresses in Cardano SL</h1>\n<p>To send and receive value, addresses are used in virtually all cryptocurrencies.\nCardano SL supports 3 main types of addresses:</p>\n<ol>\n<li>public key address,</li>\n<li>script address,</li>\n<li>redeem address.</li>\n</ol>\n<p>Public key address is a normal address like in any other cryptocurrency. It is\na hashed public key. Read more about public key addresses <a href="#public-key-addresses">below</a>.</p>\n<p>Script address is used in so-called "Pay to Script Hash" (P2SH) transactions.\nIt operates autonomously and acts somewhat like a bank deposit: you can send\nmoney to it, but in order to redeem it you have to satisfy certain conditions,\ndetermined by a script associated with the address. The address itself contains\nthe hash of the serialized script. Read more about P2SH <a href="#pay-to-script-hash">below</a>.</p>\n<!-- end -->\n<p>Redeem address is a special type of address for ADA redemption. Read more about redeem\naddresses <a href="#redeem-addresses">below</a>.</p>\n<p>Moreover, Cardano SL support <code>Unknown</code> address type as well. This type will allow us to use\ncustom types of addresses in the future.</p>\n<h2>What Does an Address Look Like?</h2>\n<p>Addresses are <code>base58</code>-encoded bytestrings, for example:</p>\n<pre><code>Ae2tdPwUPEZKmwoy3AU3cXb5Chnasj6mvVNxV1H11997q3VW5ihbSfQwGpm\n</code></pre>\n<h3>Encoding</h3>\n<p><code>base58</code> encoding is the same one as used in Bitcoin. It uses a 58-symbol alphabet\nto encode data, hence the name. Here is the alphabet we are using:</p>\n<pre><code>123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\n</code></pre>\n<p>It avoids both non-alphanumeric characters and letters which might look\nambiguous when printed (<code>0</code>, <code>O</code>, <code>I</code>, <code>l</code>); therefore it is suitable for human\nusers who enter the data manually, copying it from some visual source, and also\nallows easy copy and paste by double-clicking which usually selects the whole\nstring.</p>\n<h2>Public Key Addresses</h2>\n<p>As mentioned in the <a href="/introduction/#you-own-your-money">Introduction</a>, the wallets\nyou can see in the user interface are a convenient representation of the fact that\nyou own a secret key to spend money in this particular wallet. But how is such\nspending verified by the network and how can you receive money from others? The\nanswer is that along with the secret key which is used to control the value in\nyour wallets, a public key is generated. This public component can be known by\nanybody, hence the name.</p>\n<p>A public key address contains the hash of this public key.</p>\n<p>Public keys are also used for verifying your identity when you create a\ntransaction and other auxiliary purposes.</p>\n<h2>Pay to Script Hash</h2>\n<p>The idea of Pay to Script Hash (P2SH) is to provide a lot of flexibility for\nformulating complex rules for spending money. Instead of sending a transaction\nto a public key address, we create a validator script that can take a so-called\nredemption script as a parameter. To redeem funds, we pass the redemption script\nto the validator and evaluate it. If it evaluates to <code>success</code>, money is sent as\nspecified by the redeemer. Otherwise nothing happens.</p>\n<p>To quote Bitcoin Wiki,</p>\n<blockquote>\n<p>Using P2SH, you can send bitcoins to an address that is secured in various\nunusual ways without knowing anything about the details of how the security is\nset up. The recipient might need the signatures of several people to spend\nthese bitcoins, or a password might be required, or the requirements could be\ncompletely unique.</p>\n</blockquote>\n<h2>Redeem Addresses</h2>\n<p>Redeem addresses are Pay To PubKey Hash (P2PKH). Such an address contains the hash\nof redeem public key, and this key is actually <a href="http://ed25519.cr.yp.to/">Ed25519</a>\npublic key.</p>\n<h2>Other Address Types</h2>\n<p>In the future, we may use the update system to introduce other address types. Please\n<a href="/cardano/update-mechanism/#soft-fork-updates">see more</a> on extending the system in\nnon-breaking fashion.</p>\n<h2>Address Structure</h2>\n<p>Address consists of 3 parts:</p>\n<ul>\n<li>address root,</li>\n<li>address attributes,</li>\n<li>address type.</li>\n</ul>\n<p>We can imagine an address as a JSON-like structure, for example:</p>\n<pre><code>Address {\n    addrRoot = AbstractHash e63175c654dfd93a9290342a067158dc0f57a1108ddbd8cace3839bd,\n    addrAttributes = Attributes {\n        data: AddrAttributes {\n            aaPkDerivationPath = Nothing,\n            aaStakeDistribution = BootstrapEraDistr\n        } \n    },\n    addrType = ATPubKey\n}\n</code></pre>\n<p><code>addrRoot</code> is the BLAKE2b-224 hash of the tuple made from <code>addrType</code>, <code>addrSpendingData</code> and <code>addrAttributes</code>.</p>\n<p><code>addrSpendingData</code> is a special value which is bound to an address and must be revealed in order to spend coins belonging to\nthis address. For example, for public key address this value contains the public key. In this case, it is impossible to change\naddress attributes without knowing of the public key because if the attributes have been changed the whole address becomes\ninvalid.</p>\n<p><code>addrAttributes</code> include important attributes of each address: derivation path and stake distribution.</p>\n<p>For more info about derivation path please read <a href="https://cardanodocs.com/technical/hd-wallets/">HD Wallets in Cardano SL</a> chapter.</p>\n<p>For more info about stake distribution please read <a href="https://cardanodocs.com/cardano/transactions/#stake-distribution">Transactions in Cardano SL</a>\nchapter.</p>\n<p>Value of <code>addrType</code> corresponds to address type as was mentioned above, in this example it is a public key address.</p>\n<h3>Length</h3>\n<p>Addresses may have different lengths depending on address type and additional data in it.</p>\n<p>For example, this address</p>\n<pre><code>Ae2tdPwUPEZKmwoy3AU3cXb5Chnasj6mvVNxV1H11997q3VW5ihbSfQwGpm\n</code></pre>\n<p>and this one</p>\n<pre><code>4swhHtxKapQbj3TZEipgtp7NQzcRWDYqCxXYoPQWjGyHmhxS1w1TjUEszCQT1sQucGwmPQMYdv1FYs3d51KgoubviPBf\n</code></pre>\n<p>are both public key addresses.</p>',frontmatter:{path:"/en/cardano/addresses/",doc_title:"Addresses",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/docs/2017-01-13-for-contributors.cn.md absPath of file >>> MarkdownRemark",excerpt:"\n# Redirecting bar...\n",html:'<h1>Redirecting bar...</h1>\n<!-- end -->\n<!-- <script>\n    window.location.replace("https://github.com/input-output-hk/cardano-sl/blob/develop/CONTRIBUTING.md");\n</script> -->\n<h1>STOOPID!!</h1>',frontmatter:{path:"/cn/for-contributors/",doc_title:"For Contributors",author:null,date:null,language:"cn",label:"docs",keywords:"contributors bar"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-01-13-balance-and-stake.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at e070e675764738b5190b2f93424de403f1937216 -->\n\n# How Balance and Stake work within the Cardano SL\n\nThere are two important concepts within the Cardano SL: these are **balance** and **stake**. This chapter\nexplains the difference between these two concepts and how they both function.\n\n### Balance\n\nBalance is the real amount of coins that each user has. When you install a Daedalus wallet on your computer\nand perform the [Ada redemption](/timeline/bootstrap/) process, you receive an amount of Ada. This amount of\nAda is called your balance. You can send an amount of Ada (within this balance), to other users, as well as\nreceive any amount of Ada from other users.\n",html:'<!-- Reviewed at e070e675764738b5190b2f93424de403f1937216 -->\n<h1>How Balance and Stake work within the Cardano SL</h1>\n<p>There are two important concepts within the Cardano SL: these are <strong>balance</strong> and <strong>stake</strong>. This chapter\nexplains the difference between these two concepts and how they both function.</p>\n<h3>Balance</h3>\n<p>Balance is the real amount of coins that each user has. When you install a Daedalus wallet on your computer\nand perform the <a href="/timeline/bootstrap/">Ada redemption</a> process, you receive an amount of Ada. This amount of\nAda is called your balance. You can send an amount of Ada (within this balance), to other users, as well as\nreceive any amount of Ada from other users.</p>\n<!-- end -->\n<p>Thus, when we refer to the balance, we are talking about the user\'s actual money.</p>\n<h3>Stake</h3>\n<p>Unlike balance (the real amount of money you have),\nstake is a key element of the entire financial power of Cardano SL. Stake gives a user the\npower to control various Cardano SL algorithm parts, for example: being the <a href="/glossary/#slot-leader">slot leader</a>,\nvoting in the <a href="/cardano/update-mechanism/">Update system</a>, taking part in <a href="/technical/leader-selection/#follow-the-satoshi">MPC/SSC</a>. This is why all thresholds in the Cardano SL protocol are expressed in terms of stake, rather than balance.</p>\n<p>Thus, when we refer to the stake, we are talking about the user\'s ability to control the actual Cardano SL. For more information about stake, please refer to the following <a href="/glossary/#paper">paper</a>. </p>\n<h3>The Relationship Between Balance and Stake</h3>\n<p>Every coin in Cardano SL is associated with a balance and with a stake. We use <a href="/cardano/transactions/#design">transaction output</a>\nto associate coin <code>C</code> with a user\'s balance, and we use <a href="/cardano/transactions/#stake-distribution">stake distribution</a>\nto associate coin <code>C</code> with a user\'s stake.</p>\n<p>Note: It is possible to change the association between coin and stake using what is known as <a href="/technical/delegation/">stake delegation</a>.</p>',frontmatter:{path:"/en/cardano/balance-and-stake/",doc_title:"Balance and Stake",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-01-19-topology.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at ba744590c89d8ffa6d6f0919ec11f52202a6d8f2 -->\n\n# Cardano SL Network Topology\n\nThis is an overview of Cardano SL network topology.\n\n## Nodes Groups\n\nThough Cardano SL is designed and implemented as a distributed network, for purpose of DDoS protection\nadditional facilities were added to Cardano SL implementation and topology. Currently all nodes are\ndivided into 3 groups:\n\n1. Core\n2. Relay\n3. Edge\n\nLet's describe each of these groups.\n",html:'<!-- Reviewed at ba744590c89d8ffa6d6f0919ec11f52202a6d8f2 -->\n<h1>Cardano SL Network Topology</h1>\n<p>This is an overview of Cardano SL network topology.</p>\n<h2>Nodes Groups</h2>\n<p>Though Cardano SL is designed and implemented as a distributed network, for purpose of DDoS protection\nadditional facilities were added to Cardano SL implementation and topology. Currently all nodes are\ndivided into 3 groups:</p>\n<ol>\n<li>Core</li>\n<li>Relay</li>\n<li>Edge</li>\n</ol>\n<p>Let\'s describe each of these groups.</p>\n<!-- end -->\n<h3>Core Node</h3>\n<p>Core nodes are the most important ones.</p>\n<p>As described <a href="/timeline/bootstrap/#stake-locking">here</a>, for Byron release we will have stake effectively\nlocked on federation of core nodes. Only these few nodes can be <a href="/glossary/#slot-leader">slot leaders</a>, so\nonly these nodes will be able to create new blocks over this period. This is essential for network core nodes to\noperate well and continue maintaining the blockchain. We also bring additional security level around this set\nof core nodes: we put them inside a perimeter of relay nodes, so core nodes are isolated from the public\ninternet and only relay nodes are allowed to communicate with core nodes. This is how we reduce probability\nfor them being attacked.</p>\n<p>Please note that core nodes never create currency transactions (only edge nodes can do it, see below).</p>\n<h3>Relay Node</h3>\n<p>You can think of relay nodes as of proxy between core nodes and public internet.</p>\n<p>Since relay nodes are not isolated, they can be attacked, but they are in principle stateless and do not have\nany stake, so they can be moved, or their number can be increased. If relays are taken down, this does deny\nservice, but the integrity of the core nodes (and the blockchain) should not be compromised.</p>\n<p>Since relay nodes do not have any stake, they cannot be slot leaders. Moreover, they cannot create currency\ntransactions as well.</p>\n<p>Relay nodes are fully under the control of the federated committee of initial stakeholders.</p>\n<h3>Edge Node</h3>\n<p>Edge node is a simple node that anyone can run on their computer. Only these nodes can create currency\ntransactions.</p>\n<p>Since edge nodes do not have any stake, they cannot be slot leaders as well as relay nodes. Furthermore,\nedge nodes cannot directly communicate with core nodes, only with relay nodes and with other edge nodes.</p>',frontmatter:{path:"/en/cardano/topology/",doc_title:"Topology",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-02-01-monetary-policy.en.md absPath of file >>> MarkdownRemark",excerpt:'<!-- Reviewed at 1bd2a2f5979233f4f50a7e66ab4e1819ac486400 -->\n\n# Cardano Monetary Policy\n\n<div style="border-radius:5px;padding:5px 10px;background: #cdeffc;" markdown="1">\nThis section defines the Cardano monetary policy.\n\n### THE LAUNCH OF CARDANO AND AVAILABILITY OF ADA\n\nDuring the sale that occurred at the launch, 25,927,070,538 Ada were sold. An amount equal to 20% of the total Ada vouchers were sold during the sale period, equating to 5,185,414,108 units. These Ada vouchers were generated and distributed to three entities of the Cardano community, each members of the Technical and Business Development Pool, namely: [IOHK](https://iohk.io), [Emurgo](http://emurgo.io/) and the [Cardano Foundation](https://cardanofoundation.org/). The total amount of Ada that was made available at the launch is equal to 31,112,484,646 ADA.\n',html:'<!-- Reviewed at 1bd2a2f5979233f4f50a7e66ab4e1819ac486400 -->\n<h1>Cardano Monetary Policy</h1>\n<div style="border-radius:5px;padding:5px 10px;background: #cdeffc;" markdown="1">\nThis section defines the Cardano monetary policy.\n<h3>THE LAUNCH OF CARDANO AND AVAILABILITY OF ADA</h3>\n<p>During the sale that occurred at the launch, 25,927,070,538 Ada were sold. An amount equal to 20% of the total Ada vouchers were sold during the sale period, equating to 5,185,414,108 units. These Ada vouchers were generated and distributed to three entities of the Cardano community, each members of the Technical and Business Development Pool, namely: <a href="https://iohk.io">IOHK</a>, <a href="http://emurgo.io/">Emurgo</a> and the <a href="https://cardanofoundation.org/">Cardano Foundation</a>. The total amount of Ada that was made available at the launch is equal to 31,112,484,646 ADA.</p>\n<!-- end -->\n<h3>ADA SUPPLY CAP</h3>\n<p>Ada is capped at an arbitrary 45,000,000,000, or forty-five billion Ada.</p>\n<h3>ADA TO BE ISSUED DURING THE OPERATION OF THE CARDANO PROTOCOL</h3>\n<p>The remaining Ada, 13,887,515,354, will be issued after the launch through minting.</p>\n<p>Note: There will never be more than 45,000,000,000 Ada in circulation.</p>\n</div>\n<h2>TREASURY AND FEES</h2>\n<div style="border-radius:5px;padding:5px 10px;background: #cdeffc;" markdown="1">\nThis section outlines treasury plans and associated fees.\n<h3>BOOTSTRAP ERA (LAUNCH)</h3>\n<p>Cardano is currently in its bootstrapping phase. During this phase, fees are not being collected and no Ada is being minted. Fees from this phase will be collected in the future and they will be destroyed.</p>\n<h3>TREASURY</h3>\n<p>Cardano will have a treasury going forward. This treasury will be endowed via some portion (yet to be defined), of newly-minted Ada and transaction fees. The treasury will be governed by Ada holders.</p>\n<h3>MINIMAL FEE (Current Calculation)</h3>\n<p>The minimal fee = 0.155381 ADA + 0.000043946 (ADA/Byte) x size-of-transaction.</p>\n<p>Note: Fee calculations and incentives are areas that are currently being researched and their development is in progress.</p>\n<h3>DENOMINATIONS</h3>\n<ul>\n<li>1 ADA = 1,000,000 Lovelaces</li>\n<li>1 Lovelace = 1/1,000,000 Ada</li>\n<li>Ada has six decimal places.</li>\n<li>1.000000 = 1 ADA</li>\n<li>0.000001 = 1 Lovelace</li>\n</ul>\n<p>In terms of money units, there are two points of consideration. Firstly in Japan, yen amounts are much larger, where 10,000 yen is similar to a 100 dollar bill. Factoring this into unit calculations, the amount changes from 25 billion Ada to 250 million. Remember that a unit of Ada is equal to a million Lovelaces (the smallest unit), and after factoring in this adjustment, equates to a total of 2.5 million. Secondly, Ada has six digits from the decimal point, rather than eight digits for Bitcoin. </p>\n</div>',frontmatter:{path:"/en/cardano/monetary-policy/",doc_title:"Monetary Policy",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-02-02-transaction-fees.en.md absPath of file >>> MarkdownRemark",excerpt:"\n# Transaction Fees in Cardano SL\n\n## Motivation\n\nThere are two main reasons why transaction fees are needed for Cardano SL:\n\n1.  People who run full Cardano SL nodes spend time, money and effort to run the protocol, for which they should\n    be compensated and rewarded. In contrast to Bitcoin, where new currency is created with each mined block,\n    in Cardano SL, transaction fees are the only source of income for participants in the protocol.\n2.  The second reason is the prevention of DDoS (Distributed Denial of Service) attacks. In a DDoS attack, an attacker\n    tries to flood the network with dummy transactions, and if he has to pay a sufficiently high fee for each of those\n    dummy transactions, this form of attack will become prohibitively expensive for him.\n",html:'<h1>Transaction Fees in Cardano SL</h1>\n<h2>Motivation</h2>\n<p>There are two main reasons why transaction fees are needed for Cardano SL:</p>\n<ol>\n<li>People who run full Cardano SL nodes spend time, money and effort to run the protocol, for which they should\nbe compensated and rewarded. In contrast to Bitcoin, where new currency is created with each mined block,\nin Cardano SL, transaction fees are the only source of income for participants in the protocol.</li>\n<li>\n<p>The second reason is the prevention of DDoS (Distributed Denial of Service) attacks. In a DDoS attack, an attacker\ntries to flood the network with dummy transactions, and if he has to pay a sufficiently high fee for each of those\ndummy transactions, this form of attack will become prohibitively expensive for him.</p>\n<!-- end -->\n<h2>How transaction fees work</h2>\n</li>\n</ol>\n<p>Whenever somebody wants to transfer an amount of Ada, some minimal fees are computed for that transaction. In order for\nthe transaction to be valid, these minimal fees have to be included, although the sender is free to pay higher fees if\nhe so wishes.</p>\n<p>Please also read about transaction distribution <a href="#transaction-fees-distribution">below</a>.</p>\n<h2>Minimal transaction fees</h2>\n<p>The minimal fees for a transaction are calculated according to the formula:</p>\n<pre><code>a + b × size\n</code></pre>\n<p>where:</p>\n<ul>\n<li><code>a</code> is a special constant, at the moment it is 0.155381 ADA;</li>\n<li><code>b</code> is a special constant, at the moment it is 0.000043946 ADA/byte;</li>\n<li><code>size</code> is the size of the transaction in bytes.</li>\n</ul>\n<p>This means that each transaction costs at least 0.155381 ADA, with an additional cost of 0.000043946 ADA per byte of\ntransaction size. For example, a transaction of size 200 bytes (a fairly typical size) costs:</p>\n<pre><code>0.155381 ADA + 0.000043946 ADA/byte × 200 byte = 0.1641702 ADA.\n</code></pre>\n<p>The reason for having parameter <code>a</code> is the prevention of DDoS attacks mentioned above: even a very small dummy\ntransaction should cost enough to hurt an attacker who tries to generate many thousands of them.</p>\n<p>Parameter <code>b</code> has been introduced to reflect actual costs: storing larger transactions needs more computer memory\nthan storing smaller transactions, so larger transactions should be more expensive than smaller ones.</p>\n<p>Although particular values for parameters <code>a</code> and <code>b</code> were calculated, these values will probably be adjusted in\nfuture to better reflect actual costs.</p>\n<h2>Transaction fees distribution</h2>\n<p>All transaction fees of a given <a href="https://cardanodocs.com/glossary/#epoch">epoch</a> are collected in a virtual pool,\nand the idea is to then redistribute the money from that pool amongst people who were elected <a href="https://cardanodocs.com/glossary/#slot-leader">slot leaders</a>\nby the PoS-algorithm during that epoch and who created blocks.</p>\n<p>At this stage of Cardano SL, where all blocks are created by nodes operated by IOHK and our partners, fees are\nalready collected (to prevent DDoS attacks), but they will not be distributed and instead will be burnt.</p>\n<p>As soon as Cardano SL enters its next, <a href="https://cardanoroadmap.com/">fully decentralized stage</a>, fees will be\ndistributed as described above.</p>',frontmatter:{path:"/en/cardano/transaction-fees/",doc_title:"Transaction Fees",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/2017-01-01-index.en.md absPath of file >>> MarkdownRemark",excerpt:"\n<!-- Reviewed at d0868afac50ba6ffcbd95054e65cbf77fa513082 -->\n\nDear reader, the purpose of this documentation is to provide you with\nunderstanding of the first layer of Cardano Platform stack, the Settlement\nLayer. If you have an understanding of what Settlement Layer is, we suggest you\nfirst read [Differences Between the Paper and the\nImplementation](/cardano/differences/), and then move on to [documentation on\nprotocols and implementation](/technical/protocols/csl-application-level/).\n\nThis documentation targets IOHK developers, third party software developers,\nauditors, and consultants who collaborate on implementing Cardano Settlement\nLayer or use Cardano Settlement Layer reference implementation.\n",html:'<!-- Reviewed at d0868afac50ba6ffcbd95054e65cbf77fa513082 -->\n<p>Dear reader, the purpose of this documentation is to provide you with\nunderstanding of the first layer of Cardano Platform stack, the Settlement\nLayer. If you have an understanding of what Settlement Layer is, we suggest you\nfirst read <a href="/cardano/differences/">Differences Between the Paper and the\nImplementation</a>, and then move on to <a href="/technical/protocols/csl-application-level/">documentation on\nprotocols and implementation</a>.</p>\n<p>This documentation targets IOHK developers, third party software developers,\nauditors, and consultants who collaborate on implementing Cardano Settlement\nLayer or use Cardano Settlement Layer reference implementation.</p>\n<!-- end -->\n<!-- CARDANO_SL_README_BEGIN_1 -->\n<h2>What is Cardano SL?</h2>\n<p>Cardano SL (or Cardano Settlement Layer) is a cryptographic currency designed\nand developed by <a href="https://iohk.io/team">IOHK</a> in conjunction with the University\nof Edinburgh, the University of Athens and the University of Connecticut. Cardano\nSL is based on the Haskell implementation of the white paper\n<a href="https://iohk.io/research/papers/#9BKRHCSI">"Ouroboros: A Provably Secure Proof of Stake Blockchain Protocol"</a>\nby Aggelos Kiayias, Alexander Russell, Bernardo David and Roman Oliynykov.</p>\n<p>You can think of Cardano SL as Bitcoin reimagined with a freedom to fix Bitcoin’s\ndesign flaws. Please read <a href="https://cardanodocs.com/introduction/#what-makes-cardano-sl-special">"What Makes Cardano SL Special?"</a>\nfor more information about similarities and differences between Cardano SL and Bitcoin.</p>\n<!-- CARDANO_SL_README_END_1 -->\n<h2>Cryptocurrency Basics</h2>\n<p>Before giving a definition of a cryptocurrency, let\'s talk about why we care\nabout digital currencies in general and cryptographic currencies in particular.</p>\n<h3>Why Do We Care?</h3>\n<h4>Speed</h4>\n<p>As opposed to conventional (also known as fiat), centrally banked currencies,\nsuch as the Yen or the American Dollar, digital currencies do not require a\nbanking system to move value. With this restriction lifted, working with digital\ncurrencies is much faster than working with banking, especially on a global\nscale. Transferring 10 USD from Osaka to Denver no longer takes days when a\ndigital currency is used. All transactions are made rapidly regardless of the\ndistance.</p>\n<h4>You Own Your Money</h4>\n<p>All that a commercial bank account owner is given is a promise of being paid a\ncertain amount of money within a reasonable amount of time after receiving a\npayout request. Banking systems also have limits to any volume of value being\nmoved, rendering an individual unable to withdraw or transfer large amounts\nquickly. In case of cryptocurrencies, the person who holds a special kind of\ninformation called <em>a secret key</em> can spend the money at will. No other entity\nhas a power to manipulate the value that a user owns.</p>\n<h4>Pseudonymity</h4>\n<p>One can have as many cryptocurrency addresses as they wish, receiving and\nspending money from different addresses as per their purpose. A merchant running\nan E-Commerce shop can have a set of addresses for receiving money and issuing\nrefunds, and a separate personal "wallet" for their own needs. A single interface is used\nto control all of these wallets, and there is no need to log in to several\npayment platforms, which makes the process very time-efficient.</p>\n<h4>Security</h4>\n<p>Your money is as secure as the <em>secret key</em> that allows spending it. This means\nthat storing your secret key on a USB flash drive in a safe is equivalent to\nhaving banknotes in a safe. Absolutely nobody can steal this money even by\ncarrying out a successful cyberattack.</p>\n<h4>Extensibility</h4>\n<p>Using an approach known as <a href="https://www.blockstream.com/sidechains.pdf"><em>side\nchains</em></a>, general purpose\ncryptocurrencies such as Cardano SL or Bitcoin can enable domain specific\ncryptocurrencies, such as Ethereum Classic. This way, any innovation developed\nvia domain specific cryptocurrency can have participants who hold value in a\ngeneral purpose cryptocurrency. Examples of such applications are identity\nmanagement, gaming and gambling, and verifiable computations.</p>\n<h3>What is a Cryptocurrency?</h3>\n<p>Cryptocurrency is a form of digital currency that uses cryptography to\nmanipulate value. Cryptography provides a way to generate proof of genuine\nauthenticity of any kind of information. This is called <em>digital signing</em>. In\ncryptocurrencies we generate a ledger (a database which provides information on\nhow much money each address has) by signing and sending transactions to the\nnetwork and receiving blocks of confirmed transactions. Cryptocurrencies are\nnormally decentralized, meaning that many people from all over the globe\nparticipate in ledger generation by running cryptocurrency nodes. Thus, a\nconsensus about the state of the ledger has to be achieved. Two most significant\napproaches for achieving such consensus are discussed in the next section.</p>\n<h2>What Makes Cardano SL Special?</h2>\n<!-- v0.1.0.0 -->\n<p>While there are similarities between Bitcoin and Cardano SL, there are also many\ndifferences between these two cryptocurrencies. The most significant difference\nis that Bitcoin is a proof of work type cryptocurrency, while Cardano SL makes\nuse of a proof of stake approach to reach consensus. This encourages honesty and\nlong term participation.</p>\n<h3>Purpose of a Consensus Algorithm</h3>\n<p>Consensus algorithms are used to produce new transaction blocks, resulting in an\nupdated state of the ledger. Whenever someone publishes a block of transactions,\nthey — or rather, their node that runs the cryptocurrency protocol — have to\nattach a proof that they have merited it. Below two types of such proofs are\ndiscussed.</p>\n<h3>Proof of Work and Mining</h3>\n<p>Proof of work is the most common consensus algorithm type for cryptocurrencies.\nIt originated in Bitcoin, and this is how this cryptocurrency works. To generate\nproof of work, a computer has to solve a challenge. The challenge is a\ncomputationally heavy problem which is hard to solve, but the solution is easy\nto verify. When a computer on a proof of work based network finds a solution, it\npublishes it along with the transactions that the computer has been observing while\ncracking the problem. The owner of this computer collects the transaction fees\nand a reward for generating a block. The entire process is called <em>mining</em>.\nMining is very energy consuming, and the amount of energy needed is constantly increasing,\nwhich can lead to unsound competition.</p>\n<h3>Proof of Stake and Minting</h3>\n<p>Proof of stake is a novel approach to block generation. IOHK scientists led by\n<a href="https://iohk.io/team/aggelos-kiayias/">Prof. Aggelos Kiayias</a> have designed the\nfirst provably secure proof of stake algorithm called Ouroboros. Ouroboros lies\nat the heart of Cardano SL. Research team has published a\n<a href="https://iohk.io/research/papers/a-provably-secure-proof-of-stake-blockchain-protocol/">white paper</a>\nthat is a worthy read for anyone with a background in cryptocurrency theory. The\ncore idea of proof of stake is that instead of wasting electricity on cracking\ncomputationally heavy problems, a node is selected to mint a new block, with a\nprobability proportional to the amount of coins this node has. If a node\nhas positive (> 0) <a href="/cardano/proof-of-stake/#stake">stake</a>, it is called <em>a\nstakeholder</em>. If a node eventually becomes chosen to mint a block, it is called <em>a\nslot leader</em>. You can read more about this process in <a href="/cardano/proof-of-stake/">Proof of Stake in Cardano\nSL</a>.</p>\n<!-- CARDANO_SL_README_BEGIN_2 -->\n<h2>Beyond Settlement Layer</h2>\n<p>Cardano SL is called "Layer" for a reason. It is the first component of\nthe Cardano Platform. Eventually, it will be expanded with a Control Layer,\nserving as a trusted computation framework to evaluate a special\nkind of proofs to ensure that a certain computation was carried out\ncorrectly. In gaming and gambling, such systems are used for\nverifying honesty of random number generation and game\noutcomes. Accompanied with side chains, it will make possible to accomplish\nsuch tasks as provably fair distribution of winnings in games. But the\napplication of Control Layer lies well beyond gaming and gambling. Identity\nmanagement, credit system and more will be a part of Cardano Platform.\nWe are also aiming to evolve Daedalus, the Cardano SL <a href="https://github.com/input-output-hk/daedalus">wallet application</a>,\ninto a universal cryptocurrency wallet featuring automated\ncryptocurrency trading and cryptocurrency-to-fiat transactions.</p>\n<!-- CARDANO_SL_README_END_2 -->',
frontmatter:{path:"/en/introduction/",doc_title:"Introduction",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/2017-01-10-technical.en.md absPath of file >>> MarkdownRemark",excerpt:"\n<!-- Reviewed at d0868afac50ba6ffcbd95054e65cbf77fa513082 -->\n\n# Cardano SL Technical Details\n\nThis section is a starting point for developers who wish to contribute to the\noriginal client, as well as those who wish to undertake making their own client\nfor Cardano SL. Nonetheless, this section covers the original client to great\nextent, assuming that it will be the initial reference client for some time.\n",html:'<!-- Reviewed at d0868afac50ba6ffcbd95054e65cbf77fa513082 -->\n<h1>Cardano SL Technical Details</h1>\n<p>This section is a starting point for developers who wish to contribute to the\noriginal client, as well as those who wish to undertake making their own client\nfor Cardano SL. Nonetheless, this section covers the original client to great\nextent, assuming that it will be the initial reference client for some time.</p>\n<!-- end -->\n<h2>High-level overview</h2>\n<p>A Cardano SL node is a blockchain node. When ran, it finds other nodes (via\n<a href="http://ast-deim.urv.cat/cpairot/dhts.html">DHT</a>) and then starts performing\nblockchain-related procedures.</p>\n<p>Time in Cardano SL is divided into <em>epochs</em>. Every epoch is divided into\n<em>slots</em>. Epochs and slots are numbered. Therefore, the slot <code>(3,5)</code> is read as\n"the fifth slot of the third epoch" (the 0-th slot and the 0-th epoch are also\npossible).</p>\n<p>Cardano SL uses sets of constants, special values defined in\n<a href="https://github.com/input-output-hk/cardano-sl/blob/bf5dd592b7bf77a68bf71314718dc7a8d5cc8877/core/constants.yaml">the <code>constants.yaml</code> configuration file</a>.\nThere are two main sets: for production mode and development mode. In this guide\nwe\'ll refer to productions constants.</p>\n<p>Suppose the values for Cardano SL are:</p>\n<ul>\n<li>slot duration: 120 seconds,</li>\n<li>security parameter <em>k</em>: 60.</li>\n</ul>\n<p>In other words, <strong>a slot lasts 120 seconds</strong>, and an epoch has <a href="https://github.com/input-output-hk/cardano-sl/blob/9ee12d3cc9ca0c8ad95f3031518a4a7acdcffc56/core/Pos/Core/Constants/Raw.hs#L161"><code>10×k</code></a>\nslots in it, so it lasts <strong>1200 minutes</strong> or <strong>20 hours</strong>.</p>\n<p>There is one node called the slot leader on each slot. Only this node has right\nto generate a new block during this slot; this block will be added to the\nblockchain. However, there\'s no guarantee that new block will be actually\ngenerated (e.g. slot leader can be offline during a corresponding slot).</p>\n<p>Furthermore, slot leader may delegate its right to another node <code>N</code>; in this\ncase node <code>N</code> will have a right to generate a new block instead of slot leader.\nPlease note that node <code>N</code> with delegated right is not called a slot leader\nthough, it is just a delegate.</p>\n<p>It\'s theoretically possible to delegate the slot leader\'s right to multiple\nnodes, but it is <strong>not</strong> recommended by reasons explained later. Moreover, we can\nrun multiple nodes with the same key (i.e. on one computer), let\'s say nodes\n<code>A</code>, <code>B</code> and <code>C</code>, and if node <code>A</code> is elected as the slot leader, not only <code>A</code>\nitself, but nodes <code>B</code> and <code>C</code> will be able to generate a new block as well. In\nthis case, every one of these nodes will issue a most probably different block,\nand the network will fork — each other node will accept <strong>only one</strong> of these\nconcurrent blocks. Later, this fork will be eliminated.</p>\n<p>During the epoch, nodes send each other MPC messages to come to the consensus as\nto who would be allowed to generate blocks in the next epoch. Payloads from\n<code>Data</code> messages (along with transactions) are included into blocks.</p>\n<p>The more currency (or "stake") an address holds, the more likely it is to be\nchosen to generate a block. Please read about <a href="/cardano/proof-of-stake/">Ouroboros Proof of Stake Algorithm</a>\nfor more details.</p>\n<p>In short:</p>\n<ol>\n<li>send messages,</li>\n<li>receive messages/transactions/etc,</li>\n<li>form a block (if you are the slot leader),</li>\n<li>repeat.</li>\n</ol>\n<h2>Business logic</h2>\n<h3>Listeners</h3>\n<p>Listeners handle incoming messages and respond to them. Various supplemental\nlisteners will not be covered, focusing on the main ones instead.</p>\n<p>Listeners mostly use the <a href="/technical/protocols/csl-application-level/#invreqdata-and-messagepart">Relay\nframework</a>,\nwhich includes three type of messages:</p>\n<ul>\n<li><code>Inventory</code> message: node publishes message to network when gets a new data.</li>\n<li><code>Request</code> message: node requests a new data which was published in\n<code>Inventory</code> message, from other node, if this data is not known yet by\nthis node.</li>\n<li><code>Data</code> message: node replies with this message on <code>Request</code> message. <code>Data</code>\nmessage contains concrete data.</li>\n</ul>\n<p>For instance, when a user creates a new transaction, the wallet sends\n<code>Inventory</code> message with transaction id to the network. If the node that has\nreceived <code>Inventory</code> doesn\'t know any transaction with such id, then it replies\nwith <code>Request</code> message, after that the wallet sends this transaction in <code>Data</code>\nmessage. After the node has received the <code>Data</code> message, it can send the\n<code>Inventory</code> message to its neighbors in DHT network and repeat previous\niterations again.</p>\n<p>Another example - block listeners <a href="https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/src/Pos/Block/Network/Listeners.hs#L30"><code>handleGetHeaders</code></a>,\n<a href="https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/src/Pos/Block/Network/Listeners.hs#L50"><code>handleGetBlocks</code></a>,\n<a href="https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/src/Pos/Block/Network/Listeners.hs#L77"><code>handleBlockHeaders</code></a>.</p>\n<h3>Workers</h3>\n<p>A Worker is an action repeated with some interval. For example:</p>\n<ul>\n<li><a href="https://github.com/input-output-hk/cardano-sl/blob/69e896143cb02612514352e286403852264f0ba3/infra/Pos/Communication/Protocol.hs#L218"><code>onNewSlotWorker</code></a>: Runs at the beginning of each slot. Does some cleanup and\nthen runs additional functions. This worker also creates a\n<em>genesis block</em> at the beginning of the epoch. There are two kinds of\nblocks: "genesis blocks" and "main blocks". Main blocks are stored in the\nblockchain; genesis blocks are generated by each node internally between\nepochs. Genesis blocks aren\'t announced to other nodes. However, a node may\nrequest a genesis block from someone else for convenience, if this node was\noffline for some time and needs to catch up with the blockchain.</li>\n<li><a href="https://github.com/input-output-hk/cardano-sl/blob/d01d392d49db8a25e17749173ec9bce057911191/src/Pos/Block/Worker.hs#L69"><code>blkOnNewSlot</code></a>: Creates\na new block (when it is the node\'s turn to create a new block) and announces it\nto other nodes.</li>\n</ul>\n<h2>Proof of Stake</h2>\n<p>At the heart of Cardano SL sits the Ouroboros Proof of Stake protocol, as\ndescribed in <a href="https://eprint.iacr.org/2016/889">the whitepaper</a> of the same\nname.</p>\n<h2>Forks</h2>\n<p>Generally, one chain (the <em>main chain</em>) is maintained by a node, but eventually\nalternative chains may arise. Recall that only blocks <code>k</code> and more slots deep are\nconsidered stable. This way, if a block which is neither a part nor a\ncontinuation of our blockchain is received, we first check if its complexity is\nbigger than ours (the complexity is the length of the chain), and then we start\nsubsequently requesting previous blocks from the node that provided an\nalternative chain header. If we come deeper than <code>k</code> slots ago, the alternative\nchain gets rejected. Otherwise, once we get to the block existing in our chain,\nthe alternative chain is added to storage. From the standpoint of state, we\nstore and maintain all the alternative chains that are viable. If it appears\nthat an alternative chain is longer than the main chain, they are swapped,\nmaking the alternative chain the new main chain.</p>\n<h2>Supplemental parts</h2>\n<h3>Slotting</h3>\n<p>The consensus scheme we use relies on correct slotting. More specifically, it\nrelies on the assumption that nodes in the system have access to the current\ntime (small deviations are acceptable), which is then used to figure out when\nany particular slot begins and ends, and perform particular actions in this\nslot.</p>\n<p>System start time is a timestamp of the <code>(0,0)</code> slot (i.e. the 0-th slot of the 0-th\nepoch).</p>\n<h2>P2P Network</h2>\n<h3>Peer discovery</h3>\n<p>We use Kademlia DHT for peer discovery. It is a general solution for distributed\nhash tables, based on <a href="https://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf">a whitepaper by Petar Maymounkov and David Mazières,\n2002</a>.</p>\n<p>However, we only take advantage of its peer discovery mechanism, and use none of\nits hash table capabilities.</p>\n<p>In short, each node in the Kademlia network is provided a <code>160</code>-bit id generated\nrandomly. The distance between the nodes is defined by <code>XOR</code> metric. The network\nis organized in such a way that node knows no more than <code>K</code> (<code>K=7</code> in the\noriginal client implementation) nodes for each relative distance range:\n<code>2^i &#x3C; d &#x3C;= 2^(i+1)</code>.</p>\n<p>Initial peer discovery is done by\n<a href="https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia/Implementation.hs#L194">sending</a>\na Kademlia <code>FIND_NODE</code> message with our own node id as a parameter to <a href="https://github.com/input-output-hk/cardano-sl/blob/43a2d079a026b90ba860e79b5be52d1337e26c6f/src/Pos/Constants.hs#L89">a\npre-configured set of\nnodes</a>\nand the nodes passed by the user on the command line. Our implementation\n<a href="https://github.com/input-output-hk/cardano-sl/blob/43a2d079a026b90ba860e79b5be52d1337e26c6f/infra/Pos/DHT/Real/Real.hs#L228">sends</a>\nthis request to all known peers at once and then waits for the first reply.</p>\n<p>While the client runs, it collects peers per Kademlia protocol. The list of\nknown peers is preserved and\n<a href="https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia.hs#L197">restored</a>\nbetween subsequent launches. For each peer, we keep their <a href="https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia/Types.hs#L42">host and port\nnumber</a>,\nas well as their <a href="https://github.com/serokell/kademlia/blob/bbdca50c263c6dae251e67eb36a7d4e1ba7c1cb6/src/Network/Kademlia/Types.hs#L70">node\nid</a>.</p>\n<h3>Messaging</h3>\n<p>Kademlia already provides the notion of nodes that are known. Such nodes can be\ncalled <em>neighbors</em>. To send message to all nodes in a network, you can send it\nto neighbors, they will resend it to their neighbors, and so on. But sometimes\nwe may need to not propagate messages across all network, but send it to\nneighbors only. Hence we have three types of sending messages:</p>\n<ul>\n<li>send to a node,</li>\n<li>send to neighbors,</li>\n<li>send to network.</li>\n</ul>\n<h4>Message types</h4>\n<p>To handle this, three kind of message headers are used, and there are two\nmessage types:</p>\n<ul>\n<li>Simple: sending to a single peer.</li>\n<li>Broadcast: attempting to send to the entire network, iteratively sending\nmessages to neighbors.</li>\n</ul>\n<p>Broadcast messages are resent to neighbors right after retrieval (before\nhandling). Also, they are being checked against LRU cache, and messages that\nhave been already received once get ignored.</p>\n<h3>Leaders and rich men computation (LRC)</h3>\n<p>"Slot leaders" and "rich men" are two important notions of Ouroboros Proof of\nStake Algorithm.</p>\n<ul>\n<li>\n<p>Slot leaders: Slot leaders for the current epoch (for each slot of the\ncurrent epoch) are computed by <a href="/cardano/proof-of-stake/#follow-the-satoshi">Follow the\nSatoshi</a> (FTS) algorithm in the\nbeginning of current epoch. FTS uses a <code>shared seed</code> which is result of\n<a href="/cardano/proof-of-stake/#multi-party-computation">Multi Party Computation</a>\n(MPC) algorithm for previous epoch: in the result of MPC some nodes reveal\ntheir seeds, <code>xor</code> of these seeds is called <code>shared seed</code>.</p>\n</li>\n<li>\n<p>Rich men: Only nodes that have sent their VSS certificates and also have\nenough stake can participate in the MPC algorithm. So in the beginning of\nepoch node must know all potential participants for validation of MPC\nmessages during this epoch. Rich men are also computed in the beginning of\ncurrent epoch.</p>\n</li>\n</ul>\n<p>Rich men are important for other components as well; for instance, Update system\nuses rich men for checking that node can publish update proposal and vote.</p>\n<p>There are two ways of computing who the rich men will be: - considering common\nstake - considering delegated stake (Ouroboros provides opportunity to delegate\nown stake to other node, see more in <a href="/cardano/differences/#stake-delegation">Delegation\nsection</a>)</p>\n<p>MPC and Update System components need rich men with delegated stake, but\nDelegation component with common stake.</p>\n<h2>Constants</h2>\n<p>Cardano SL uses a list of the fundamental constants. Their values have been\ndiscussed with the original authors of the protocol as well as independent\nsecurity auditors, so reusing these constants is strongly recommended for\nalternative clients.</p>\n<p>Values of these constants are defined in\n<a href="https://github.com/input-output-hk/cardano-sl/blob/bf5dd592b7bf77a68bf71314718dc7a8d5cc8877/core/constants.yaml">the <code>constants.yaml</code> configuration file</a>,\nfor production and development environments separately.</p>',frontmatter:{path:"/en/technical/",doc_title:"Technical details",author:null,date:null,language:"en",label:null,keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-01-01-proof-of-stake.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at c4c45ce9a7a8f4aa6d88a32829755196a017f6a1 -->\n\n# Ouroboros Proof of Stake Algorithm\n\nThe Ouroboros Proof of Stake (PoS) Algorithm is the most important part of the protocol.\nIt defines the way in which nodes reach consensus about the state of [ledger](/glossary/#ledger).\n\nOuroboros is unique as it is the first blockchain protocol that is based on proof of\nstake and has been scientifically proven as secure.\n\n## Why Proof of Stake?\n\nThe most important thing about picking a Proof of Stake (PoS) algorithm over a Proof\nof Work (PoW) algorithm (as adopted by Bitcoin), is the energy consumption\nconsiderations. Running the bitcoin protocol is a very expensive endeavor which uses\nlarge amounts of energy. It is estimated that 3.8 American households can be powered\nfor a day by the energy that is spent to generate one bitcoin transaction. These energy\nrequirements for running the bitcoin protocol continue to grow as more and more bitcoin\nminers sink money into mining. In addition, more energy is needed as the difficulty\nof the problems that their computers or mining rigs, encounter increases. This is why\nresearchers have investigated alternative ways to reach consensus — such as using the\nso-called BFT (Byzantine Fault Tolerant), consensus algorithms and PoS algorithms.\n\n## What is Proof of Stake?\n\nProof of Stake is a novel approach to block generation. The core idea of Proof of Stake\nis that instead of wasting electricity on cracking computationally heavy problems, a node\nis selected to generate (or “mint”) a new block with a probability proportional to the\namount of coins this node has. If a node has positive (> 0) stake, it is called a “stakeholder”.\nIf a node eventually becomes chosen to mint a new block, it is called a “slot leader”.\n",html:'<!-- Reviewed at c4c45ce9a7a8f4aa6d88a32829755196a017f6a1 -->\n<h1>Ouroboros Proof of Stake Algorithm</h1>\n<p>The Ouroboros Proof of Stake (PoS) Algorithm is the most important part of the protocol.\nIt defines the way in which nodes reach consensus about the state of <a href="/glossary/#ledger">ledger</a>.</p>\n<p>Ouroboros is unique as it is the first blockchain protocol that is based on proof of\nstake and has been scientifically proven as secure.</p>\n<h2>Why Proof of Stake?</h2>\n<p>The most important thing about picking a Proof of Stake (PoS) algorithm over a Proof\nof Work (PoW) algorithm (as adopted by Bitcoin), is the energy consumption\nconsiderations. Running the bitcoin protocol is a very expensive endeavor which uses\nlarge amounts of energy. It is estimated that 3.8 American households can be powered\nfor a day by the energy that is spent to generate one bitcoin transaction. These energy\nrequirements for running the bitcoin protocol continue to grow as more and more bitcoin\nminers sink money into mining. In addition, more energy is needed as the difficulty\nof the problems that their computers or mining rigs, encounter increases. This is why\nresearchers have investigated alternative ways to reach consensus — such as using the\nso-called BFT (Byzantine Fault Tolerant), consensus algorithms and PoS algorithms.</p>\n<h2>What is Proof of Stake?</h2>\n<p>Proof of Stake is a novel approach to block generation. The core idea of Proof of Stake\nis that instead of wasting electricity on cracking computationally heavy problems, a node\nis selected to generate (or “mint”) a new block with a probability proportional to the\namount of coins this node has. If a node has positive (> 0) stake, it is called a “stakeholder”.\nIf a node eventually becomes chosen to mint a new block, it is called a “slot leader”.</p>\n<!-- end -->\n<h3>Proof</h3>\n<p>The “proof” part of “proof of stake” refers to evidence that blocks of\ntransactions are legitimate.</p>\n<h3>Stake</h3>\n<p>While “stake” means “the relative value held by addresses on the node”. By “relative\nvalue” we mean “all the total value held by wallets on a particular node divided by\nthe total value in the Cardano SL system”. For more information, please see:\n<a href="/cardano/balance-and-stake/">Balance and Stake in Cardano SL</a></p>\n<h2>About Slot Leaders</h2>\n<p>Nodes with a positive stake are called stakeholders, and only stakeholders may\nparticipate in running the protocol. Moreover, to be able to generate new blocks\nfor the blockchain, a stakeholder must be elected as a slot leader. The slot leader can\nlisten to transactions announced by other nodes, make a block of those transactions,\nsign this block with its secret key and publish it to the network.</p>\n<p>You can think of a slot leader as a miner in bitcoin, but the above-mentioned consensus\ndefines who will be able to mine, when and how much.</p>\n<h2>Epochs and Slots</h2>\n<p>The Ouroboros protocol divides the physical time into <strong>epochs</strong>, and each epoch is\ndivided into <strong>slots</strong>. For example:</p>\n<pre><code>+----------+----------+-------+----------+--------------------> t\n|  slot 0  |  slot 1  |  ...  |  slot N  |\n\n \\                                      / \\\n  -------------- epoch M ---------------   -- epoch M+1 -- ...\n</code></pre>\n<p><strong>Note:</strong> a slot is a relatively short period of time (for example, 20 seconds).</p>\n<p>Each slot has one and only one leader (slot leader, SL):</p>\n<pre><code>+----------+----------+-------+----------+----> t\n|  slot 0  |  slot 1  |  ...  |  slot N  |\n\n    SL 0       SL 1               SL N\n</code></pre>\n<p>The slot leader has a (sole) right to produce one and only one block during his slot:</p>\n<pre><code>  +------+   +------+           +------+\n  | Bl 0 |&#x3C;--| Bl 1 |&#x3C;-- ... &#x3C;--| Bl N |\n  +------+   +------+           +------+\n+----------+----------+-------+----------+----> t\n|  slot 0  |  slot 1  |  ...  |  slot N  |\n\n    SL 0       SL 1               SL N\n</code></pre>\n<p>It means that the number of slot leaders is strictly equal to the number of slots\nin epoch (let\'s call this number <code>N</code>), so it is impossible to produce more than <code>N</code>\nblocks during an epoch.</p>\n<p>If slot leader missed their slot (for example, when offline), the right to produce\na block is lost until they are elected again.</p>\n<p><strong>Note:</strong> One or more slots can remain empty (without generated blocks), but the\nmajority of blocks (at least 50% + 1) <strong>must</strong> be generated during an epoch.</p>\n<h2>How Slot Leaders Elections Work</h2>\n<p>Slot leaders are elected from the group of all stakeholders. Please note that not all\nstakeholders participate in this election, but only ones who have enough stake (for example, 2% of\nthe total stake). This group of stakeholders are known as “electors”.</p>\n<p>Electors elect slot leaders for the next epoch during the current epoch. Thus, at the end of epoch\n<code>N</code> it is already known who are slot leaders for the epoch <code>N+1</code>, and it cannot be\nchanged.</p>\n<p>You can think of this election as a “fair lottery”; anyone from the group of stakeholders can\nbecome a slot leader. However, an important idea of PoS is that the more stake stakeholder has,\nthe more chances one has to be elected as a slot leader. </p>\n<p><strong>Note:</strong> One stakeholder can be elected as a slot leader for more than one slot\nduring the same epoch.</p>\n<h3>Multiparty Computation</h3>\n<p>One of the fundamental problems of the slot leader election process is its unbiasedness.\nA certain degree of randomness is needed as a base for election, in this case, results of\nthis election are random and fair. So the question is where can this randomness be obtained\nfrom?</p>\n<p>A multiparty computation (MPC) approach is used to achieve this randomness where each elector\nindependently performs an action which is called “coin tossing” and after that shares results\nwith other electors. The idea is that results are randomly generated by each elector, but eventually\nthey agree on the same final value.</p>\n<h4>Commitment Phase</h4>\n<p>First of all, an elector generates a secret (or special random value). Next, an elector forms a\n“commitment” which is a message that contains encrypted shares (see an explanation below) and\nproof of secret.</p>\n<p>The next step is when an elector signs this commitment with its secret key, specifies the epoch\'s\nnumber and attaches its public key. In this case, everybody can check who created this commitment\nand which epoch this commitment relates to.</p>\n<p>Subsequently, an elector sends its commitment to other electors, so eventually each elector collects\ncommitments from all other electors.</p>\n<p><strong>Note:</strong> these commitments are put into the block, that is, they become a part of the blockchain.</p>\n<h4>Reveal Phase</h4>\n<p>The reveal phase is where an elector sends an “opening”, or special value for opening a commitment.\nA commitment is like a locked box (with a secret in it), and the act of opening involves a key that\nopens the box retrieves the secret.</p>\n<p><strong>Note:</strong> all openings are put into the block, that is, they become a part of the blockchain.</p>\n<h4>Recovery Phase</h4>\n<p>The final phase in the process is called the recovery phase.</p>\n<p>Eventually, an elector has both commitments and openings. Theoretically some electors can be an\nadversary and can publish its commitment but <strong>not</strong> publish its opening.</p>\n<p>In this case, the honest electors can post all shares (mentioned above) to reconstruct the\nsecret. The idea is simple: an election finishes successfully even if some electors are adversaries.</p>\n<p>Subsequently, an elector verifies that commitments and openings match, and if so, extracts the\nsecrets from the commitments and forms a seed (randomly generated byte string) from these secrets.\nSo all electors get the same seed, and it will be used for Follow the Satoshi (FTS) algorithm.</p>\n<h3>Follow the Satoshi</h3>\n<p>At this moment, electors have the seed (randomness we need). Now they have to select a particular slot\nleaders for the next epoch. This is where the Follow the Satoshi (FTS) algorithm comes into effect:</p>\n<pre><code>         +-----+\nSEED --->| FTS |---> ELECTED_SLOT_LEADERS\n         +-----+\n</code></pre>\n<p>To explain how a slot leader gets selected, think of the smallest, atomic piece\nof value as a coin called “<a href="/glossary/#lovelace">Lovelace</a>”. Fundamentally, the ledger produces the\ndistribution of coins, and since slot leaders can only be selected from stakeholders distribution of\nstake. FTS is an algorithm that verifiably picks a coin, and when coin owned by stakeholder <code>S</code> selected,\n<code>S</code> become a slot leader. It is clear that the more coins <code>S</code> has, the higher the probability that one\nof his coins will be picked.</p>\n<p>The reason why it is called “Follow the Satoshi” is that in bitcoin, an atomic piece of currency\nis called “Satoshi”, honoring Satoshi Nakamoto, the creator of bitcoin. </p>\n<h2>Honest Majority</h2>\n<p>The fundamental assumption of a protocol is known as <strong>honest majority</strong>. This means that\nparticipants owning at least 50% + 1 of the total stake are honest ones. In this\ncase we can <strong>prove</strong> that adversaries cannot break <em>persistence</em> and <em>liveness</em>\nof the blockchain. For more information see the <a href="/glossary/#paper">paper</a> (pages 2 and 3).</p>',frontmatter:{path:"/en/cardano/proof-of-stake/",doc_title:"Ouroboros Proof of Stake Algorithm",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-01-10-transactions.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n\n# Transactions in Cardano SL\n\n## Overview\n\nA transaction (*tx*) is a special data which represents the *act* of the value\ntransferring between nodes (from the user's point of view, transferring between\nwallets). Thus, when the user *Alice* sends money to the user *Bob*, the new\ntransaction emerges. Let's call this transaction `Tx1`, the node under *Alice*'\nwallet `N1`, and the node under *Bob*'s wallet `N2`.\n\nThus, the node `N1` does the following steps:\n\n1.  Creating transaction `Tx1` and signs it with its private key.\n2.  Sending it to all known nodes (i.e. neighbors).\n3.  Saving it in its local data.\n\nEach of `N1`'s neighbors sends `Tx1` transaction to its neighbors and so on, and\nsome slot leader will store this transaction in some block in the ledger. Please\nnote that if the network is under high load, it may take a lot of time for\ntransaction to be actually added to the block.\n",html:"<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n<h1>Transactions in Cardano SL</h1>\n<h2>Overview</h2>\n<p>A transaction (<em>tx</em>) is a special data which represents the <em>act</em> of the value\ntransferring between nodes (from the user's point of view, transferring between\nwallets). Thus, when the user <em>Alice</em> sends money to the user <em>Bob</em>, the new\ntransaction emerges. Let's call this transaction <code>Tx1</code>, the node under <em>Alice</em>'\nwallet <code>N1</code>, and the node under <em>Bob</em>'s wallet <code>N2</code>.</p>\n<p>Thus, the node <code>N1</code> does the following steps:</p>\n<ol>\n<li>Creating transaction <code>Tx1</code> and signs it with its private key.</li>\n<li>Sending it to all known nodes (i.e. neighbors).</li>\n<li>Saving it in its local data.</li>\n</ol>\n<p>Each of <code>N1</code>'s neighbors sends <code>Tx1</code> transaction to its neighbors and so on, and\nsome slot leader will store this transaction in some block in the ledger. Please\nnote that if the network is under high load, it may take a lot of time for\ntransaction to be actually added to the block.</p>\n<!-- end -->\n<h2>Design</h2>\n<p>Each transaction contains a list of <em>inputs</em> and a list of <em>outputs</em>; outputs of\nthe transaction <code>Tx0</code> can be used as inputs of the other transaction <code>Tx1</code>, and\nso on:</p>\n<pre><code>            Tx0                           Tx1\n  +----------------------+      +----------------------+\n  |                      |      |                      |\n  |  Inputs     Outputs  |      |  Inputs     Outputs  |\n  | +------+   +-------+ |      | +------+   +-------+ |\n  | | In0  |   | Out0  + |      | | In0  |   | Out0  | |\n  | +------+   +-------+ |      | +------+   +-------+ |\n  | | In1  |   | Out1  | |      | | In1  |   | Out1  | |\n  | +------+   +-------+ |      | +------+   +-------+ |\n  | | ...  |   | ...   | |      | | ..   |   | ...   | |\n  | +------+   +-------+ |      | +------+   +-------+ |\n  | | InN  |   | OutM  | |      | | InN  |   | OutM  | |\n  | +------+   +-------+ |      | +------+   +-------+ |\n  |                      |      |                      |\n  +----------------------+      +----------------------+     ...\n</code></pre>\n<p>Inputs and outputs carry information about <em>money flow</em>: inputs inform where the\nmoney came from, and outputs inform where the money comes to. Please notice that\nthere's <code>N</code> and <code>M</code>, because the actual number of inputs and outputs can be\ndifferent.</p>\n<p>Thus, each input contains:</p>\n<ol>\n<li>An ID of transaction <code>TxN</code>, whose output is used for this input. Transaction\nID is a BLAKE2b-256 hash of the transaction, something like\n<code>f9bcbe752aee4512457f1fd350200cf870906b7e6e836688c9a3779645c86c01</code>.</li>\n<li>An index of the using output in <code>TxN</code>'s outputs.</li>\n</ol>\n<p>Each output contains:</p>\n<ol>\n<li>An address of the node <code>N</code> we want to send a value to. An address is a\nBLAKE2b-224 hash of the hash of the public key of the <code>N</code> node, something\nlike <code>1fsAhhf4E1LQDB8agSds8teuD4E7U8JsRESngEX52kinBhi</code>. Please read about\n<a href=\"/cardano/addresses/\">Addresses in Cardano SL</a> for more info.</li>\n<li>Amount of money we want to send. This value is 64-bit unsigned integer with\nmaximum value <code>45000000000000000</code>.</li>\n</ol>\n<p>For example:</p>\n<pre><code>  Tx 891971a4cc31e32..                           Tx f9bcbe752aee4512..\n------------------------+           +----------------------------------------------+\n\\                       |           |                                              |\n/        Outputs        |           |       Inputs                  Outputs        |\n\\  +------------------+ |           | +-----------------+     +------------------+ |\n/  | Out0             | |           | | In0             |     | Out0             | |\n\\  | +--------------+ | |           | | +-------------+ |     | +--------------+ | |\n/  | | Value        | | |           | | | Tx id       | |     | | Value        | | |\n\\  | | 100 ADA      | | |           | | | 891971a4c.. | |     | | 100 ADA      | | |\n/  | +--------------+------->>  ------>>+-------------+ |     | +--------------+------->>\n\\  | | Node address | | |           | | | Out index   | |     | | Node address | | |\n/  | | a00e4bb2..   | | |           | | | 0           | |     | | 88ca7f79..   | | |\n\\  | +--------------+ | |           | | +-------------+ |     | +--------------+ | |\n/  | ...              | |           | | ...             |     | ...              | |\n\\  +------------------+ |           | +-----------------+     +------------------+ |\n/                       |           |                                              |\n------------------------+           +----------------------------------------------+\n</code></pre>\n<p>Node <code>a00e4bb2..</code> generates transaction <code>f9bcbe752aee4512..</code>, and this\ntransaction informs us that:</p>\n<ol>\n<li>We want to send 100 ADA from the current node with address <code>a00e4bb2..</code> to\nthe node with address <code>88ca7f79..</code>.</li>\n<li>This money corresponds to <code>0</code>th output of the previous transaction with an\nID <code>891971a4c..</code>.</li>\n</ol>\n<h2>Verification</h2>\n<p>As mentioned above, the transaction's output becomes the input of the other\ntransaction. In this case, we treat such output as <em>spent transaction output</em>.\nThus, an output <code>Out0</code> of the transaction <code>891971a4cc31e32..</code> is a spent output,\nbecause it already is an input of the <code>f9bcbe752aee4512..</code> transaction.</p>\n<p>But such spendings do not occur immediately, so an output that <em>isn't yet</em> an\ninput of another transaction is called an <em>unspent transaction output</em>. Only\nunspent outputs can be used as inputs for other transactions, to prevent\n<a href=\"https://en.bitcoin.it/wiki/Double-spending\">double-spending</a>.</p>\n<p>So every node in the network not only accepts transactions, but also\nverifies them. To do it, every node has to keep track of unspent outputs, it\nallows to validate that inputs in a published transaction are indeed the unspent\noutputs. Actually, all unspent outputs called <em>utxo</em>, and this is a part of the\nspecial key-value database called <em>Global State</em>.</p>\n<h2>Proofs of Transaction Legitimacy</h2>\n<p>Each transaction in Cardano SL is accompanied by a proof (also called a <strong>witness</strong>)\nthat this transaction is legitimate. Even if the output is an unspent one, we\nhave to prove that we have <em>a right</em> to spend it. Since a <code>TxN</code> transaction can\nhave many inputs, the witness for it consists of the witnesses of all <code>TxN</code>'s\ninputs, and only if all the inputs are legitimate, <code>TxN</code> is legitimate too. If a\nparticular transaction isn't legitimate, it will be rejected by the network.</p>\n<p>Because of <a href=\"/cardano/addresses/#what-does-an-address-look-like\">two available types of node\naddress</a> we use two\ncorresponding versions of the witness: based on <em>public key</em> and based on\n<em>script</em>.</p>\n<p>For example, the first option works with a public key <code>PK</code> and a transaction\nsignature: legitimate input must be signed with a private key corresponding to <code>PK</code>.\nSo it's possible to check this signature and either accept that input or reject it.</p>\n<p>Witnesses are stored in the blockchain and anybody can see, inspect and\nindependently verify them. But after some time a node may delete old proofs in\norder to save space. The technique of storing transactions separately from their\nproofs is called \"segregated witness\" (you may have heard of it being recently\n<a href=\"https://bitcoincore.org/en/2016/01/26/segwit-benefits/\">implemented in\nBitcoin</a>). Under this\nscheme, transactions and proofs are stored in two separate places in a block,\nand can be processed independently.</p>\n<h2>Stake Distribution</h2>\n<p>Stake distribution is another part of Cardano SL, not directly related to delegation,\nbut one we can exploit for its benefit.</p>\n<p>Some addresses have multiple owners, which poses a problem of stake computation as per\nFollow-the-Satoshi each coin should only be counted once towards each stakeholder's stake total.\nUnlike balance (real amount of coins on the balance), stake gives user power to control different\nalgorithm parts: being the slot leader, voting in Update system, taking part in MPC/SSC.</p>\n<p>Stake distribution is a value associated with each address. Technically stake distribution is a value\nwhich is a part of address' attributes. This value corresponds to one of three different cases:</p>\n<ol>\n<li>Bootstrap era distribution. This is a special value which is mandatory in Bootstrap era, but it can be used\nafter Bootstrap era as well.</li>\n<li>Single key distribution, which means that all stake will go to the given stakeholder.\nIn this case distribution contains stakeholder's identifier.</li>\n<li>Multiple key distribution, which means that stake will go to the multiple stakeholders (at least two).\nIn this case distribution contains pairs \"stakeholder's identifier - portion of an output\".\nTransaction's output has a value, portion of this value is a stake.</li>\n</ol>\n<p>Stake distributions are considered by both <a href=\"https://cardanodocs.com/technical/leader-selection/\">slot-leader election process</a>\nand Richmen Computations.</p>\n<p>This feature can be used in similar way to <a href=\"https://cardanodocs.com/technical/delegation/\">delegation</a>, but there\nare differences:</p>\n<ol>\n<li>There is no certificate(s): to revoke stake delegation <code>A</code> has to move funds, providing\ndifferent stake distribution.</li>\n<li>The portion of <code>A</code>'s stake can be delegated via distribution. On the contrary, delegation\nrequires you to delegate all funds of whole address at once.</li>\n</ol>",
frontmatter:{path:"/en/cardano/transactions/",doc_title:"Transactions",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-02-05-explorer.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at dec0d911d6c4beb8e708ed4076f832ff871f6125 -->\n\n# Cardano SL Explorer\n\nThis is an overview of Cardano SL Explorer service (hereafter referred to as\n\"Explorer\").\n\nExplorer is an [online service](https://cardanoexplorer.com/) for searching\naddresses, transactions, epochs and slots on the Cardano network.\n\n## Address\n\nIt is possible to find information about users' addresses. After inserting the\naddress' hash we'll see:\n\n1.  The number of transactions related to this address.\n2.  The final balance on this address.\n3.  The QR-code associated with this address.\n\nExample of an address' hash: `1fhXcTriF8i8FFSdCTaU9d3yp3oCLFQhon5KBkevT8rQDPP`.\n",html:"<!-- Reviewed at dec0d911d6c4beb8e708ed4076f832ff871f6125 -->\n<h1>Cardano SL Explorer</h1>\n<p>This is an overview of Cardano SL Explorer service (hereafter referred to as\n\"Explorer\").</p>\n<p>Explorer is an <a href=\"https://cardanoexplorer.com/\">online service</a> for searching\naddresses, transactions, epochs and slots on the Cardano network.</p>\n<h2>Address</h2>\n<p>It is possible to find information about users' addresses. After inserting the\naddress' hash we'll see:</p>\n<ol>\n<li>The number of transactions related to this address.</li>\n<li>The final balance on this address.</li>\n<li>The QR-code associated with this address.</li>\n</ol>\n<p>Example of an address' hash: <code>1fhXcTriF8i8FFSdCTaU9d3yp3oCLFQhon5KBkevT8rQDPP</code>.</p>\n<!-- end -->\n<h2>Transaction</h2>\n<p>We can find information about a transaction. After inserting the transaction's\nID we'll see:</p>\n<ol>\n<li>Transaction date and time.</li>\n<li>This transaction's source address.</li>\n<li>This transaction's address destination.</li>\n<li>The amount of ADA transferred within this transaction.</li>\n<li>Transaction fee.</li>\n</ol>\n<p>The example of a transaction's ID:\n<code>fe0681c7fe20c27071befc329caac059bb183afaf68b9595744c52125c61cf68</code>.</p>\n<h2>Time</h2>\n<p>We can find information about transactions by the time as well. Now it's\npossible to specify <a href=\"/glossary/#epoch\">epoch</a> and <a href=\"/glossary/#slot\">slot</a> only.\nAfter inserting the epoch's index and the slot's index, we'll see:</p>\n<ol>\n<li>The number of transactions for this slot.</li>\n<li>The total amount of ADA transferred during this slot.</li>\n<li>The size of the block generated within this slot.</li>\n</ol>\n<h3>Slot</h3>\n<p>It's possible to get the information about a particular slot. After inserting\nthe slot's hash we'll see:</p>\n<ol>\n<li>The number of transaction for this slot.</li>\n<li>The total output value.</li>\n<li>Estimated volume of ADA for this slot.</li>\n<li>Fees.</li>\n<li>The slot's ID.</li>\n</ol>\n<p>Furthermore, we'll see information about hashes:</p>\n<ol>\n<li>This slot's hash.</li>\n<li>The previous slot's hash (if exists).</li>\n<li>The next slot's hash (if exists).</li>\n<li>The Merkle root.</li>\n</ol>",frontmatter:{path:"/en/cardano/explorer/",doc_title:"Explorer",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/content/intro.en.md absPath of file >>> MarkdownRemark",excerpt:"Cardano SL (或卡尔达诺运算层）是由 IOHK 联合爱丁堡大学，雅典大学和康涅狄格大学共同设计开发的一种加密货币。卡尔达诺运算层是基于 Aggelos Kiayias，Alexander Russell，Bernardo David 和 Roman Oliynykov…",html:"<h3>Cardano SL</h3>\n<p>(或卡尔达诺运算层）是由 IOHK 联合爱丁堡大学，雅典大学和康涅狄格大学共同设计开发的一种加密货币。卡尔达诺运算层是基于 Aggelos Kiayias，Alexander Russell，Bernardo David 和 Roman Oliynykov 的白皮书 『乌洛波罗斯：可证明安全的权益证明协议』的 Haskell 实现。</p>\n<p>您可以将卡尔达诺结算层视为基于比特币重新设计的针对比特币缺陷的自由修复。 有关卡尔达诺结算层和比特币之间的相似之处和差异的更多信息，请阅读『卡尔达诺结算层为什么特别?』。</p>\n<h3>加密货币基础</h3>\n<p>在给出加密货币的定义之前，我们先来谈谈为什么我们在意数字货币，特别是加密货币。</p>\n<h3>我们为什么在意?</h3>\n<ul>\n<li>\n<h4>速度</h4>\n<p>与传统（也称为法定）中心银行货币，与日元或美元相反，电子货币不需要一个银行系统来转移价值。这一限制的解除，使用数字货币的速度要快于银行业务，尤其是在全球范围内。使用数字货币从大阪转移10美元到丹佛不再需要数天的时间。无论距离如何，所有交易都能迅速完成。</p>\n</li>\n<li>\n<h4>你掌控你自己的钱</h4>\n<p>所有的商业银行账户所有者在收到支付请求后在合理的时间内只能支付一定的金额。银行体系对任何价值量都有限制，使个人无法迅速撤出或转移大量资金。有加密货币的情况下，持有一种称为密钥这一特殊信息的人就可以随意花钱。没有其他实体有权操纵用户拥有的价值。</p>\n</li>\n<li>\n<h4>匿名</h4>\n<p>人们可以根据需要，拥有任意多的加密货币地址，从不同的地址接收，消费资产。经营电子商务商店的商家可以拥有一组收款和退款的地址，以及一个用于他们自身需要的单独的个人『钱包』。通过统一的接口控制所有这些钱包，并且不需要登录到多个支付平台，这使得该过程非常节省时间。</p>\n</li>\n<li>\n<h4>安全</h4>\n<p>你的钱就像可用于消费的密钥一样安全。这意味着将密钥存储在保险箱中的 USB 闪存上相当于让纸币处于安全状态。即使进行了成功的网络攻击，也绝对没有人能够窃取这笔钱。</p>\n</li>\n<li>\n<h4>扩展性</h4>\n<p>使用一种称为侧链的方法，以及通用加密货币，如卡尔达诺结算层和比特币，就可以启用特定领域的加密货币，例如以太经典。这样一来，通过特定领域的加密货币开发的任何创新产品都可以让参与者在通用的加密货币中保持价值。这样的应用程序的例子有身份管理，游戏和赌博，以及可验证计算。</p>\n</li>\n</ul>\n<h3>什么是加密货币?</h3>\n<p>加密货币是一种数字货币形式，使用密码来控制价值。密码学提供了一种生成任何类型信息的真实真实性证据的方法。这就是所谓的数字签名。在加密货币中，我们通过签署和发送交易到网络并接收已确认的交易块，生成一个总账（一个提供每个地址有多少钱的信息的数据库）。加密货币通常是分散的，这意味着来自全球各地的许多人通过运行加密货币节点参与总账的生成。因此，必须达成关于总账状况的共识。下一节讨论实现这种共识的两个最重要的方法。</p>\n<h3>卡尔达诺结算层为什么特别</h3>\n<p>虽然比特币和卡尔达诺结算层之间有相似之处，但这两个加密货币之间也有很多不同之处。最显着的区别是，比特币是工作量证明类型的加密货币，而卡尔达诺结算层使用权益证明的方法达成共识。这鼓励诚信和长期的参与。</p>\n<h3>共识算法的目的</h3>\n<p>共识算法被用来产生新的交易区块，使账本更新状态。每当有人发布一个交易区块时，他们（或者说他们的运行加密货币协议的节点）就必须附上他们已经证明的证据。下面讨论两种类型的证明。</p>\n<h3>工作量证明和挖矿</h3>\n<p>工作量证明是加密货币最普遍的共识算法类型。它起源于比特币，加密货币就是这么工作的。为了生成工作证明，计算机必须解决一个挑战。这是难以解决的计算繁重的问题，但解决方案很容易验证。当一台基于网络的工作量证明的计算机找到一个解决方案时，它会将交易发布于同它一起计算的其他计算机。这台计算机会因为产生区块得到交易费和奖励。整个过程被称为挖矿。挖矿是非常耗能的，所需的能源数量在不断增加，这可能导致不健康的竞争。</p>\n<h3>权益证明和铸币</h3>\n<p>权益证明是一种生成区块的新方法。由 Aggelos Kiayias 教授领导的 IOHK 科学家们设计了第一个可证明的，称为乌洛波罗斯的权益证明算法。乌洛波罗斯是卡尔达诺结算层的核心。研究小组已经发表了一篇白皮书 ，这封白皮书对于那些拥有加密货币理论背景的人来说是值得一读的。权益证明的核心思想是，不要浪费电力来解决计算繁重的问题，而是选择一个节点来铸造一个新的区块，其概率与这个节点的硬币数量成正相关。如果一个节点有整数个(> 0)的 slot，它被称为 slot 所有人。如果一个节点最终被选中来铸造一个区块，那么这个节点被称为 slot 领导者。您可以在卡尔达诺结算层的股权证明中了解更多关于该流程的信息。</p>\n<h3>卡尔达诺结算层之上</h3>\n<p>卡尔达诺结算层被称为『层』是有原因的。这是卡尔达诺平台的第一个组件。最终，它将被扩展到一个控制层，作为一个可信的计算框架来评估一种特殊的证明，以确保一定的计算正确执行。在游戏和赌博中，这样的系统被用于验证随机数生成和游戏结果的真实性。伴随着侧链，它将有可能完成诸如在游戏中公平分配奖金的任务。但是控制层的应用远远超出了游戏和赌博。身份管理，信用系统等将成为卡尔达诺平台的一部分。我们将迭代卡尔达诺钱包应用程序 Daedalus，使其变成一个具有自动加密货币交易功能和合法加密货币交易功能的通用加密货币钱包。</p>",frontmatter:{path:"/cn/intro-text/",doc_title:null,author:null,date:null,language:"cn",label:"content",keywords:"intro"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-01-16-updating.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n<!-- Updated at 6b5eda44e5942599a9781e5ad3f51eb820665b83 -->\n\n# Update Research Overview\n\nIn the Update Mechanism research, we have managed to propose an update system\nthat is capable of producing painless and almost seamless software updates as\nwell as providing stakeholders with an option to vote for hard forks\n(backwards-incompatible protocol updates) without the necessity to introduce any\nnon-protocol-level tools.\n\nWe propose to use stake for voting for soft and hard forks.\n",html:'<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n<!-- Updated at 6b5eda44e5942599a9781e5ad3f51eb820665b83 -->\n<h1>Update Research Overview</h1>\n<p>In the Update Mechanism research, we have managed to propose an update system\nthat is capable of producing painless and almost seamless software updates as\nwell as providing stakeholders with an option to vote for hard forks\n(backwards-incompatible protocol updates) without the necessity to introduce any\nnon-protocol-level tools.</p>\n<p>We propose to use stake for voting for soft and hard forks.</p>\n<!-- end -->\n<h2>Update System Model</h2>\n<p>For CSL, we decided to add some support for protocol updates at the protocol\nlayer itself. It introduces some overhead to blockchain processing, but has\nseveral important benefits:</p>\n<ol>\n<li>For each client implementing the protocol, its latest version from\nblockchain is known.</li>\n<li>There is no central entity responsible for maintaining or distributing\nupdates, any such update is proposed under implicit or explicit agreement of\nthe majority of stake and then distributed in a decentralized way.</li>\n<li>We do not rely upon clients updating the software on their PCs in time; this\nis done automatically, and updates are announced directly via the\nblockchain.</li>\n<li>If any security flaws are detected in some version of the CSL protocol or in\nsome particular implementation, there would be a mechanism to distribute an\nupdate rapidly (and still under agreement of the majority of stake).</li>\n</ol>\n<h2>Application Update: Sign and Announce</h2>\n<p>Here we consider ways to update the application securely. Protocol updates are a\nseparate issue which is covered in the relevant section of this document.</p>\n<p>For an update to be applied, its proposal needs be approved first. Update\nproposal can be approved if at least one of two agreements is reached:</p>\n<ol>\n<li><strong>Explicit agreement</strong>: it has positive votes from majority of total stake\n(i. e. strictly greater than <code>50%</code>).</li>\n<li><strong>Implicit agreement</strong>: it has positive votes from more stake than negative\nvotes \ufeff⁠⁠⁠and\ufeff⁠⁠⁠ it has been in blockchain for at least <code>U</code> slots.</li>\n</ol>\n<p>This approach seems to fit naturally into the CSL model, as in a PoS\ncryptocurrency every stakeholder is responsible for maintaining the system\nproportionally to the relative size of their stake, and the blockchain is\nmaintained via consensus among stakeholders.</p>\n<p>Software updates are a part of this maintenance process too, so the stakeholders\nshould agree on whether to consider this update trusted.</p>\n<h3>Implicit Agreement</h3>\n<p>The fact that stakeholders are responsible for system updates does not restrict\nus to a system where every single update requires a signature from the majority\nof stake. We can introduce the concept of an <strong>implicit agreement</strong>.</p>\n<p>An update has to have at least minimal bound (<code>updateProposalThd</code> in\n<a href="https://github.com/input-output-hk/cardano-sl/blob/e26ad11397c87ce8b00f2a26d5e237f54d6ea90a/lib/configuration.yaml">configuration.yaml</a>.)\nof the stake signatures to be published on\nthe blockchain. It is not enough for stakeholders to sign the update — they\nshould vote either for or against it.</p>\n<h3>Incorporation of Alternative Clients</h3>\n<p>IOHK will maintain a single official client. But there is also room for\nthird-party alternative clients maintained by the community. One requires enough\ncollected signatures from stakeholders to publish their system update, which may\nbe not an «update», but a different client developed from scratch, or a fork of\nthe official client. As long as this update has enough signatures from\nstakeholders, the network considers it trusted, and it is updated via the same\nmechanisms as the official client.</p>\n<h2>Application Update: Deliver and Apply</h2>\n<p>А list of HTTP mirrors ran by IOHK shall be sufficient for a start.</p>\n<p>In process of time, we plan to maintain a Bittorrent-based or Bittorrent-like\nsolution to distribute updates. In general, P2P update distribution is a crucial\nbusiness requirement due to legal concerns. It is to be decided which\nBittorrent-like solution particular we will use.</p>\n<p>Also, it’s interesting to note that the update itself does not require a secure\nand trusted channel to be used for delivery, as it is signed with some known in\nadvance and trusted key (or set of keys).</p>\n<p>Application updates are prepared with\n<a href="https://github.com/mendsley/bsdiff">bsdiff</a> and applied either directly or via\nan installer. We\'re considering migrating to\n<a href="http://dev.chromium.org/developers/design-documents/software-updates-courgette">courgette</a>\nin the future.</p>\n<h2>Protocol Update</h2>\n<p>First, we need to distinguish hard and soft protocol updates.</p>\n<p>A soft fork proposes modifying blockchain consensus rules so that the new\nversion blocks are still compatible with old version clients. A hard fork is one\nthat doesn’t maintain backward compatibility with the previous version.</p>\n<p><a href="https://github.com/bitcoin/bips/blob/ed283b05b332b85b6fd683be3a5d73fab6c15554/bip-0099.mediawiki">BIP-99</a>\nprovides excellent criteria to distinguish between these two fork types:</p>\n<ul>\n<li>A <strong>soft fork</strong> introduces new rules, or restrictions, on blocks. That way,\neverything that was previously invalid remains invalid, while some blocks\nthat would have been previously considered valid become invalid.</li>\n<li>A <strong>hard fork</strong> is a fork that makes previously invalid blocks valid.</li>\n</ul>\n<p>Soft forks have some deployment advantages like backward compatibility, and they\ndon\'t require everyone\'s consensus, as the stake majority of users can impose\nthe new rules. By contrast, hard forks require all users to upgrade.</p>\n<p>In theory, a hard fork may lead to a situation when a network splits into two\nparts, each maintaining a separate chain: one from the nodes that adopted the\nlatest system update, and another from the nodes that rejected to do that. This\nmeans some blocks from the first part are considered invalid by the other part,\nand vice versa.</p>\n<p>We define <strong>protocol version</strong> as a tuple <code>(Maj, Min, Alt)</code>:</p>\n<ul>\n<li>Major version (2 bytes): to be changed rarely, changes are not\nbackward-compatible and would produce a hard fork.</li>\n<li>\n<p>Minor version (2 bytes): integer to be adjusted for each update.</p>\n<ul>\n<li>Changes should be backward-compatible in a sense that a block generated\nby the new version shall be somehow accepted by old version.</li>\n<li>A particular block may contain addresses of unknown type. For each case\nlike this, a concise workaround should be found in order not to affect\nstability and correctness of the system.</li>\n</ul>\n</li>\n<li>Alt version (1 byte): integer to manage several simultaneous protocol update\nproposals.</li>\n</ul>\n<p>The protocol version is to be announced in the application update, and is to be\nput later into each block created by updated software.</p>\n<p>A major version change triggers a hard fork in the future.</p>\n<p>A minor version change notifies the network that the subsequent application\nupdate modifies the protocol managed by a soft fork.</p>\n<p>Alt version is a marker of new features. It allows independent developers to\nintroduce multiple changes to the protocol simultaneously. For example, if one\nvendor decides to introduce feature X via a soft fork, and another proposes\nfeature Y (also via a soft fork), their software will be issuing blocks with\nversions <code>a.b.X</code> and <code>a.b.Y</code>, which can coexist in the blockchain. However, only\none will eventually be adopted.</p>\n<h2>Soft Fork Updates</h2>\n<p>There is a thin line between what we can do within a soft fork and what we\ncannot:</p>\n<ol>\n<li>An old version of the client should always find recent blocks valid. (This\nis what\n<a href="https://github.com/bitcoin/bips/blob/ed283b05b332b85b6fd683be3a5d73fab6c15554/bip-0099.mediawiki">BIP-99</a>\ncalls "everything invalid remains invalid").</li>\n<li>Some blocks issued by an old version of the client may be considered invalid\nby a newer version.</li>\n</ol>\n<p>Obviously, imposing rule 2 as it is may cause the network to be split into two\nparts: a stakeholder with a stake large enough could update and maintain their\nown chain, rejecting blocks from others, but others would be still able to\nmaintain their chain, rejecting blocks from this stakeholder (since he does not\nhave a majority of stake, and therefore cannot catch up with the rest of the\ncrowd, so his chain is shorter). A simple resolution rule could go like this: if\n95% of the latest 2016 blocks have a newer block version, the blocks with the\nolder version are rejected.</p>\n<p><strong>NOTE</strong>: <strong>block version</strong> here and later has the same meaning as the\n<strong>protocol version</strong>.</p>\n<p>It may seem unclear why we would like to make some block version invalid at some\nmoment. The key insight here is that a new feature is actually a restriction on\nwhat we had had previously. For example, currently we have plain old\ntransactions which may contain either PublicKey-based addresses or Script-based\nones. Then at some point we decide to include a third address type (no matter\nwhat its purpose is). Which strategy do we need for verifying a block with a\ntransaction with an address of unknown type? Obviously the only option is not\nverifying this address.</p>\n<p>Then imagine somebody proposing a transaction to this address, possibly doing\nthat with an intention to secure funds from being spent until some conditions\nare met — and then watching them being spent in some other transaction in a\nblock with version 1. This is the point. We cannot make use of a restriction\nwithout waiting for the network to start assuming the old version to be\ndeprecated (since we can only start rejecting blocks when their version is\ndeprecated).</p>\n<p>We also cannot bluntly accept all blocks with a version that is higher than the\none currently adopted, since in our implementation every block has a special field\nwhich is used for storing auxiliary information. An attacker can claim she uses a\nhigher version of the protocol and generate a block whose <code>attributes</code> are polluted\nwith meaningless keys. If we accept it, it will bloat the blockchain.</p>\n<p>This is the motivation for the logic described below.</p>\n<p>In our implementation, a block version can exist in the following states:</p>\n<ul>\n<li><strong>Adopted</strong>, when the soft fork resolution rule (see below) for a confirmed\nblock version is triggered.</li>\n<li><strong>Confirmed</strong>, when there is an update proposal that contains a confirmed\nversion of the software and this block version. Note that "confirmed version\nof the software" is a technical term defined\n<a href="/cardano/update-mechanism/#soft-fork-updates">elsewhere</a>. If there are\nmultiple block versions where corresponding software is confirmed, but these\nversions aren\'t adopted, we call them <strong>competing</strong>. For instance, there\nmight be versions <code>2.0.0</code>, <code>2.0.1</code>, <code>1.2.0</code>, <code>1.2.1</code>, <code>1.1.1</code> and <code>1.1.2</code>,\nwith the last adopted version being <code>1.1.3</code>. In this case the versions that\nare competing are <code>2.0.0</code>, <code>2.0.1</code>, <code>1.2.0</code> and <code>1.2.1</code>. The older versions\n<code>1.1.1</code> and <code>1.1.2</code> aren\'t competing, because <code>1.1.3</code> is already adopted.</li>\n<li>Everything else. For example, a new block version is proposed, but the\nsoftware version isn\'t confirmed yet. There is no special name for this\nstate.</li>\n</ul>\n<p>The soft fork resolution rule works as follows:</p>\n<ul>\n<li>Informally, a block version becomes <em>adopted</em> when a certain percentage of\nstake (75% in the current implementation, but this may be different in the\nmainnet) creates a block with version <code>X</code>.</li>\n<li>Formally, we do the following. First, recall that by design, our system does\nnot allow rollbacks of blockchain deeper than a certain fixed global\nthreshold <code>k</code>, which allows to define <em>stable</em> stake for each stakeholder as\ntheir stake <code>k</code> blocks ago. When we process genesis block for epoch <code>e</code>, we\ncompute the stable stake of all leaders of all slots from the very beginning\nof the network\'s existence. For each block with version <code>X</code> that is\ncurrently <em>competing</em>, we take all created <em>stable</em> blocks with version <code>X</code>,\ntake set of all leaders of these blocks and accumulate their stakes. If one\nof versions has ≥ 75%, it gets <em>adopted</em>. If more than one version has ≥\n75%, we take one of them deterministically.</li>\n</ul>\n<p>Note that adopted block version can\'t be changed during epoch (only between\nepochs), so all blocks in an epoch are verified according to the same rules\n(because rules are defined by adopted block version). But it\'s wrong to assume\nthat <em>all</em> blocks in an epoch have the same block version. After block version\nis adopted, another block version can become competing and some nodes may create\nblocks with this new version.</p>\n<p>So, gathering everything up:</p>\n<ol>\n<li>Once the update is confirmed, the protocol version (say <code>0.5.0</code>) can be\nused.</li>\n<li>\n<p>Behavior of nodes that <em>have</em> been updated (i.e. can issue and validate\nblocks with the newer version):</p>\n<ol>\n<li>Before the soft fork is resolved (i.e. before the resolution rule is\ntriggered), issue blocks with the new version <code>0.5.0</code>, but do not\ninclude any new <code>attributes</code> (if there are any). Treat and validate\nblocks of version <code>0.5.0</code> as blocks of version <code>0.4.0</code>.</li>\n<li>Once the soft fork is resolved, issue and validate blocks per version\n<code>0.5.0</code>, including the new <code>attributes</code>.</li>\n</ol>\n</li>\n<li>\n<p>Behavior of nodes that <em>have not</em> been updated (i.e. cannot issue and\nvalidate blocks with the newer version):</p>\n<ol>\n<li>Before the soft fork is resolved, issue and validate blocks per version\n<code>0.4.0</code>. Among other things, a block is not accepted if it contains\nunknown <code>attributes</code>.</li>\n<li>Once the soft fork is resolved, start accepting all blocks with version\n<code>0.5.0</code>, including the ones with unknown <code>attributes</code>. Keep validating\nthem as version <code>0.4.0</code>.</li>\n</ol>\n</li>\n</ol>\n<h2>Hard Fork Updates</h2>\n<p>Hard forks are resolved using modified proof of burn. As it is not implemented\nyet, we omit this section from this document and will publish it as a separate\ndocument.</p>',frontmatter:{path:"/en/cardano/update-mechanism/",doc_title:"Update Mechanism",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-02-03-transaction-assurance.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n\n<style>\n.full-width {\n    width: 100%;\n}\n\n.r {\n    color: white;\n    background-color: #ef4e4e;\n    text-align: right;\n    font-weight: 400;\n}\n\n.y {\n    color: white;\n    background-color: #c09e0f;\n    text-align: right;\n    font-weight: 400;\n}\n\n.g {\n    color: white;\n    background-color: green;\n    text-align: right;\n    font-weight: 400;\n}\n\n.gr {\n    color: white;\n    background-color: #aaa;\n    font-weight: 700;\n}\n\n.rd {\n    background-color: #fca8a8;\n    text-align: right;\n    font-weight: 700;\n}\n\n.yd {\n    background-color: #eccd4a;\n    text-align: right;\n    font-weight: 700;\n}\n\n.gd {\n    background-color: #53d153;\n    text-align: right;\n    font-weight: 700;\n}\n\n.center {\n    text-align: center;\n}\n\n.pct25 {\n    width: 25%;\n}\n</style>\n# Transaction Assurance Level\n\nTables below show color-coded levels of assurance that a transaction won’t be\ncanceled by some fork.\n\nFor example, at normal security level, if the attacker’s stake is **10%** (or $6\nmillions for Cardano market capitalization of $60 millions), the levels of\nassurance for a user’s transaction are:\n\n1.  Lowest assurance (color-coded with red) — when the user’s block with coin\n    transfer transaction has depth less than **3** blocks.\n2.  Medium assurance (color-coded with yellow) — when the user’s block has depth\n    from **3** to **7** blocks.\n3.  High assurance (color-coded with green) — when the user’s block has depth\n    **9** or more blocks.\n",html:'<!-- Reviewed at a6a1cdf72c7e167a13f500c0679c01fe4cfa0ca8 -->\n<style>\n.full-width {\n    width: 100%;\n}\n\n.r {\n    color: white;\n    background-color: #ef4e4e;\n    text-align: right;\n    font-weight: 400;\n}\n\n.y {\n    color: white;\n    background-color: #c09e0f;\n    text-align: right;\n    font-weight: 400;\n}\n\n.g {\n    color: white;\n    background-color: green;\n    text-align: right;\n    font-weight: 400;\n}\n\n.gr {\n    color: white;\n    background-color: #aaa;\n    font-weight: 700;\n}\n\n.rd {\n    background-color: #fca8a8;\n    text-align: right;\n    font-weight: 700;\n}\n\n.yd {\n    background-color: #eccd4a;\n    text-align: right;\n    font-weight: 700;\n}\n\n.gd {\n    background-color: #53d153;\n    text-align: right;\n    font-weight: 700;\n}\n\n.center {\n    text-align: center;\n}\n\n.pct25 {\n    width: 25%;\n}\n</style>\n<h1>Transaction Assurance Level</h1>\n<p>Tables below show color-coded levels of assurance that a transaction won’t be\ncanceled by some fork.</p>\n<p>For example, at normal security level, if the attacker’s stake is <strong>10%</strong> (or $6\nmillions for Cardano market capitalization of $60 millions), the levels of\nassurance for a user’s transaction are:</p>\n<ol>\n<li>Lowest assurance (color-coded with red) — when the user’s block with coin\ntransfer transaction has depth less than <strong>3</strong> blocks.</li>\n<li>Medium assurance (color-coded with yellow) — when the user’s block has depth\nfrom <strong>3</strong> to <strong>7</strong> blocks.</li>\n<li>\n<p>High assurance (color-coded with green) — when the user’s block has depth\n<strong>9</strong> or more blocks.</p>\n<!-- end -->\n<h2>Normal Security Level</h2>\n</li>\n</ol>\n<p>Normal level is for covert adversaries (the model is described in the latest\nversion of Ouroboros being prepared now to be shared). Values in the table\ncorrespond to Cardano market capitalization of $60 millions.</p>\n<table class="full-width">\n<tr>\n    <th class="center">             Attackers\' stake, %</th>\n    <th class="center pct25">       Attackers’ stake, $ mln </th> \n    <th colspan="6" class="center"> Assurance level         </th>\n</tr>\n<tr class="center">\n    <td></td>\n    <td></td>\n    <td> Low    </td>\n    <td> 0.950  </td>\n    <td> 0.990  </td>\n    <td> 0.995  </td>\n    <td> 0.999  </td>\n    <td> High   </td>\n</tr>\n<tr>\n    <td class="gr"> 10          </td>\n    <td class="gr"> 6           </td>\n    <td class="rd"> &lt; 3      </td>\n    <td class="yd"> 3           </td>\n    <td class="yd"> 5           </td>\n    <td class="yd"> 7           </td>\n    <td class="gd"> 9           </td>\n    <td class="gd"> 9 &lt;      </td>\n</tr>\n<tr>\n    <td>            15          </td>\n    <td>            9           </td>\n    <td class="r">  &lt; 5      </td>\n    <td class="y">  5           </td>\n    <td class="y">  9           </td>\n    <td class="y">  11          </td>\n    <td class="g">  15          </td>\n    <td class="g">  15 &lt;     </td>\n</tr>\n<tr>\n    <td>            20          </td>\n    <td>            12          </td>\n    <td class="r">  &lt; 7      </td>\n    <td class="y">  7           </td>\n    <td class="y">  13          </td>\n    <td class="y">  15          </td>\n    <td class="g">  21          </td>\n    <td class="g">  21 &lt;     </td>\n</tr>\n<tr>\n    <td>            25          </td>\n    <td>            15          </td>\n    <td class="r">  &lt; 9      </td>\n    <td class="y">  9           </td>\n    <td class="y">  19          </td>\n    <td class="y">  23          </td>\n    <td class="g">  33          </td>\n    <td class="g">  33 &lt;     </td>\n</tr>\n<tr>\n    <td>            30          </td>\n    <td>            18          </td>\n    <td class="r">  &lt; 17     </td>\n    <td class="y">  17          </td>\n    <td class="y">  31          </td>\n    <td class="y">  39          </td>\n    <td class="g">  55          </td>\n    <td class="g">  55 &lt;     </td>\n</tr>\n<tr>\n    <td>            35          </td>\n    <td>            21          </td>\n    <td class="r">  &lt; 29     </td>\n    <td class="y">  29          </td>\n    <td class="y">  57          </td>\n    <td class="y">  71          </td>\n    <td class="g">  101         </td>\n    <td class="g">  101 &lt;    </td>\n</tr>\n<tr>\n    <td>            40          </td>\n    <td>            24          </td>\n    <td class="r">  &lt; 67     </td>\n    <td class="y">  67          </td>\n    <td class="y">  133         </td>\n    <td class="y">  163         </td>\n    <td class="g">  235         </td>\n    <td class="g">  235 &lt;    </td>\n</tr>\n<tr>\n    <td>            45          </td>\n    <td>            27          </td>\n    <td class="r">  &lt; 269    </td>\n    <td class="y">  269         </td>\n    <td class="y">  539         </td>\n    <td class="y">  661         </td>\n    <td class="g">  951         </td>\n    <td class="g">  951 &lt;    </td>\n</tr>\n<tr>\n    <td>            46          </td>\n    <td>            27.6        </td>\n    <td class="r">  &lt; 421    </td>\n    <td class="y">  421         </td>\n    <td class="y">  843         </td>\n    <td class="y">  1033        </td>\n    <td class="g">  1487        </td>\n    <td class="g">  1487 &lt;   </td>\n</tr>\n<tr>\n    <td>            47          </td>\n    <td>            28.2        </td>\n    <td class="r">  &lt; 751    </td>\n    <td class="y">  751         </td>\n    <td class="y">  1501        </td>\n    <td class="y">  1841        </td>\n    <td class="g">  2649        </td>\n    <td class="g">  2649 &lt;   </td>\n</tr>\n<tr>\n    <td>            48          </td>\n    <td>            28.8        </td>\n    <td class="r">  &lt; 1691   </td>\n    <td class="y">  1691        </td>\n    <td class="y">  3381        </td>\n    <td class="y">  4143        </td>\n    <td class="g">  5965        </td>\n    <td class="g">  5965 &lt;   </td>\n</tr>\n<tr>\n    <td>            49          </td>\n    <td>            29.4        </td>\n    <td class="r">  &lt; 6763   </td>\n    <td class="y">  6763        </td>\n    <td class="y">  13527       </td>\n    <td class="y">  16585       </td>\n    <td class="g">  23869       </td>\n    <td class="g">  23869 &lt;  </td>\n</tr>\n</table>\n## Strict Security Level\n<p>Strict security level protects against all types of adversaries (it requires\nmore block confirmations). Values in the table correspond to Cardano market\ncapitalization of $60 millions.</p>\n<table class="full-width">\n<tr>\n    <th class="center">             Attackers\' stake, %</th>\n    <th class="center pct25">       Attackers’ stake, $ mln </th> \n    <th colspan="6" class="center"> Assurance level         </th>\n</tr>\n<tr class="center">\n    <td></td>\n    <td></td>\n    <td> Low    </td>\n    <td> 0.950  </td>\n    <td> 0.990  </td>\n    <td> 0.995  </td>\n    <td> 0.999  </td>\n    <td> High   </td>\n</tr>\n<tr>\n    <td class="gr"> 10          </td>\n    <td class="gr"> 6           </td>\n    <td class="rd"> &lt; 5      </td>\n    <td class="yd"> 5           </td>\n    <td class="yd"> 9           </td>\n    <td class="yd"> 11          </td>\n    <td class="gd"> 15          </td>\n    <td class="gd"> 15 &lt;     </td>\n</tr>\n<tr>\n    <td>            15          </td>\n    <td>            9           </td>\n    <td class="r">  &lt; 7      </td>\n    <td class="y">  7           </td>\n    <td class="y">  14          </td>\n    <td class="y">  16          </td>\n    <td class="g">  23          </td>\n    <td class="g">  23 &lt;     </td>\n</tr>\n<tr>\n    <td>            20          </td>\n    <td>            12          </td>\n    <td class="r">  &lt; 12     </td>\n    <td class="y">  12          </td>\n    <td class="y">  21          </td>\n    <td class="y">  25          </td>\n    <td class="g">  35          </td>\n    <td class="g">  35 &lt;     </td>\n</tr>\n<tr>\n    <td>            25          </td>\n    <td>            15          </td>\n    <td class="r">  &lt; 19     </td>\n    <td class="y">  19          </td>\n    <td class="y">  34          </td>\n    <td class="y">  40          </td>\n    <td class="g">  55          </td>\n    <td class="g">  55 &lt;     </td>\n</tr>\n<tr>\n    <td>            30          </td>\n    <td>            18          </td>\n    <td class="r">  &lt; 32     </td>\n    <td class="y">  32          </td>\n    <td class="y">  57          </td>\n    <td class="y">  68          </td>\n    <td class="g">  94          </td>\n    <td class="g">  94 &lt;     </td>\n</tr>\n<tr>\n    <td>            35          </td>\n    <td>            21          </td>\n    <td class="r">  &lt; 63     </td>\n    <td class="y">  63          </td>\n    <td class="y">  111         </td>\n    <td class="y">  132         </td>\n    <td class="g">  181         </td>\n    <td class="g">  181 &lt;    </td>\n</tr>\n<tr>\n    <td>            40          </td>\n    <td>            24          </td>\n    <td class="r">  &lt; 157    </td>\n    <td class="y">  157         </td>\n    <td class="y">  274         </td>\n    <td class="y">  325         </td>\n    <td class="g">  443         </td>\n    <td class="g">  443 &lt;    </td>\n</tr>\n<tr>\n    <td>            45          </td>\n    <td>            27          </td>\n    <td class="r">  &lt; 729    </td>\n    <td class="y">  729         </td>\n    <td class="y">  1246         </td>\n    <td class="y">  1470         </td>\n    <td class="g">  1990         </td>\n    <td class="g">  1990 &lt;    </td>\n</tr>\n<tr>\n    <td>            46          </td>\n    <td>            27.6        </td>\n    <td class="r">  &lt; 1190   </td>\n    <td class="y">  1190        </td>\n    <td class="y">  2020        </td>\n    <td class="y">  2379        </td>\n    <td class="g">  3214        </td>\n    <td class="g">  3214 &lt;   </td>\n</tr>\n<tr>\n    <td>            47          </td>\n    <td>            28.2        </td>\n    <td class="r">  &lt; 2230   </td>\n    <td class="y">  2230        </td>\n    <td class="y">  3758        </td>\n    <td class="y">  4418        </td>\n    <td class="g">  5953        </td>\n    <td class="g">  5953 &lt;   </td>\n</tr>\n<tr>\n    <td>            48          </td>\n    <td>            28.8        </td>\n    <td class="r">  &lt; 5382   </td>\n    <td class="y">  5382        </td>\n    <td class="y">  8986        </td>\n    <td class="y">  10542       </td>\n    <td class="g">  14157       </td>\n    <td class="g">  14157 &lt;  </td>\n</tr>\n<tr>\n    <td>            49          </td>\n    <td>            29.4        </td>\n    <td class="r">  &lt; 24029  </td>\n    <td class="y">  24029       </td>\n    <td class="y">  39603       </td>\n    <td class="y">  46320       </td>\n    <td class="g">  61922       </td>\n    <td class="g">  61922 &lt;  </td>\n</tr>\n</table>',
frontmatter:{path:"/en/cardano/transaction-assurance/",doc_title:"Transaction Assurance Level",author:null,date:null,language:"en",label:"docs",keywords:null}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/cn/content/intro.cn.md absPath of file >>> MarkdownRemark",excerpt:"WHAT IS CARDANO SL? Cardano SL (or Cardano Settlement Layer) is a cryptographic currency designed and developed by IOHK in conjunction with…",html:"<h3>WHAT IS CARDANO SL?</h3>\n<p>Cardano SL (or Cardano Settlement Layer) is a cryptographic currency designed and developed by IOHK in conjunction with the University of Edinburgh, the University of Athens and the University of Connecticut. Cardano SL is based on the Haskell implementation of the white paper “Ouroboros: A Provably Secure Proof of Stake Blockchain Protocol” by Aggelos Kiayias, Alexander Russell, Bernardo David and Roman Oliynykov.</p>\n<p>You can think of Cardano SL as Bitcoin reimagined with a freedom to fix Bitcoin’s design flaws. Please read “What Makes Cardano SL Special?” for more information about similarities and differences between Cardano SL and Bitcoin.\nCRYPTOCURRENCY BASICS\nBefore giving a definition of a cryptocurrency, let’s talk about why we care about digital currencies in general and cryptographic currencies in particular.</p>\n<h3>WHY DO WE CARE?</h3>\n<ul>\n<li>\n<h5>SPEED</h5>\n<p>As opposed to conventional (also known as fiat), centrally banked currencies, such as the Yen or the American Dollar, digital currencies do not require a banking system to move value. With this restriction lifted, working with digital currencies is much faster than working with banking, especially on a global scale. Transferring 10 USD from Osaka to Denver no longer takes days when a digital currency is used. All transactions are made rapidly regardless of the distance.</p>\n</li>\n<li>\n<h5>YOU OWN YOUR MONEY</h5>\n<p>All that a commercial bank account owner is given is a promise of being paid a certain amount of money within a reasonable amount of time after receiving a payout request. Banking systems also have limits to any volume of value being moved, rendering an individual unable to withdraw or transfer large amounts quickly. In case of cryptocurrencies, the person who holds a special kind of information called a secret key can spend the money at will. No other entity has a power to manipulate the value that a user owns.</p>\n</li>\n<li>\n<h5>PSEUDONYMITY</h5>\n<p>One can have as many cryptocurrency addresses as they wish, receiving and spending money from different addresses as per their purpose. A merchant running an E-Commerce shop can have a set of addresses for receiving money and issuing refunds, and a separate personal “wallet” for their own needs. A single interface is used to control all of these wallets, and there is no need to log in to several payment platforms, which makes the process very time-efficient.</p>\n</li>\n<li>\n<h5>SECURITY</h5>\n<p>Your money is as secure as the secret key that allows spending it. This means that storing your secret key on a USB flash drive in a safe is equivalent to having banknotes in a safe. Absolutely nobody can steal this money even by carrying out a successful cyberattack.</p>\n</li>\n</ul>\n<h3>EXTENSIBILITY</h3>\n<p>Using an approach known as side chains, general purpose cryptocurrencies such as Cardano SL or Bitcoin can enable domain specific cryptocurrencies, such as Ethereum Classic. This way, any innovation developed via domain specific cryptocurrency can have participants who hold value in a general purpose cryptocurrency. Examples of such applications are identity management, gaming and gambling, and verifiable computations.</p>\n<h3>WHAT IS A CRYPTOCURRENCY?</h3>\n<p>Cryptocurrency is a form of digital currency that uses cryptography to manipulate value. Cryptography provides a way to generate proof of genuine authenticity of any kind of information. This is called digital signing. In cryptocurrencies we generate a ledger (a database which provides information on how much money each address has) by signing and sending transactions to the network and receiving blocks of confirmed transactions. Cryptocurrencies are normally decentralized, meaning that many people from all over the globe participate in ledger generation by running cryptocurrency nodes. Thus, a consensus about the state of the ledger has to be achieved. Two most significant approaches for achieving such consensus are discussed in the next section.</p>\n<h3>WHAT MAKES CARDANO SL SPECIAL?</h3>\n<p>While there are similarities between Bitcoin and Cardano SL, there are also many differences between these two cryptocurrencies. The most significant difference is that Bitcoin is a proof of work type cryptocurrency, while Cardano SL makes use of a proof of stake approach to reach consensus. This encourages honesty and long term participation.</p>\n<h3>PURPOSE OF A CONSENSUS ALGORITHM</h3>\n<p>Consensus algorithms are used to produce new transaction blocks, resulting in an updated state of the ledger. Whenever someone publishes a block of transactions, they — or rather, their node that runs the cryptocurrency protocol — have to attach a proof that they have merited it. Below two types of such proofs are discussed.</p>\n<h3>PROOF OF WORK AND MINING</h3>\n<p>Proof of work is the most common consensus algorithm type for cryptocurrencies. It originated in Bitcoin, and this is how this cryptocurrency works. To generate proof of work, a computer has to solve a challenge. The challenge is a computationally heavy problem which is hard to solve, but the solution is easy to verify. When a computer on a proof of work based network finds a solution, it publishes it along with the transactions that the computer has been observing while cracking the problem. The owner of this computer collects the transaction fees and a reward for generating a block. The entire process is called mining. Mining is very energy consuming, and the amount of energy needed is constantly increasing, which can lead to unsound competition.</p>\n<h3>PROOF OF STAKE AND MINTING</h3>\n<p>Proof of stake is a novel approach to block generation. IOHK scientists led by Prof. Aggelos Kiayias have designed the first provably secure proof of stake algorithm called Ouroboros. Ouroboros lies at the heart of Cardano SL. Research team has published a white paper that is a worthy read for anyone with a background in cryptocurrency theory. The core idea of proof of stake is that instead of wasting electricity on cracking computationally heavy problems, a node is selected to mint a new block, with a probability proportional to the amount of coins this node has. If a node has positive (> 0) stake, it is called a stakeholder. If a node eventually becomes chosen to mint a block, it is called a slot leader. You can read more about this process in Proof of Stake in Cardano SL.</p>\n<h3>BEYOND SETTLEMENT LAYER</h3>\n<p>Cardano SL is called “Layer” for a reason. It is the first component of the Cardano Platform. Eventually, it will be expanded with a Control Layer, serving as a trusted computation framework to evaluate a special kind of proofs to ensure that a certain computation was carried out correctly. In gaming and gambling, such systems are used for verifying honesty of random number generation and game outcomes. Accompanied with side chains, it will make possible to accomplish such tasks as provably fair distribution of winnings in games. But the application of Control Layer lies well beyond gaming and gambling. Identity management, credit system and more will be a part of Cardano Platform. We are also aiming to evolve Daedalus, the Cardano SL wallet application, into a universal cryptocurrency wallet featuring automated cryptocurrency trading and cryptocurrency-to-fiat transactions.</p>",frontmatter:{path:"/en/intro-text/",doc_title:null,author:null,date:null,language:"en",label:"content",keywords:"intro"}}},{node:{id:"/Users/robinclark/iohk-sites/cardanodocs.com/src/pages/en/docs/cardano/2017-01-04-differences.en.md absPath of file >>> MarkdownRemark",excerpt:"<!-- Reviewed at c4c45ce9a7a8f4aa6d88a32829755196a017f6a1 -->\n\n# Differences Between the Ouroborous Protocol Paper and the Implementation\n\nThe goal of this document is to outline the ways in which the Cardano SL\nimplementation differs from the specifications presented in the *Ouroboros*\nprotocol [paper](/glossary/#paper) and to clarify any outstanding questions \nafter reading the paper.\n\nThis document is divided into four parts:\n\n1.  *Clarifications* - clarifies any details that are not specified in the\n    paper, but are important for practical implementations.\n2.  *Modifications* - outlines elements that are specified in the paper, but are\n    implemented differently in Cardano SL.\n3.  *Added features* - briefly outlines new features which are not described\n    in the paper, but have been implemented in Cardano SL.\n4.  *Omissions* - lists topics described in the paper but are not yet implemented into\n    Cardano SL.\n",html:'<!-- Reviewed at c4c45ce9a7a8f4aa6d88a32829755196a017f6a1 -->\n<h1>Differences Between the Ouroborous Protocol Paper and the Implementation</h1>\n<p>The goal of this document is to outline the ways in which the Cardano SL\nimplementation differs from the specifications presented in the <em>Ouroboros</em>\nprotocol <a href="/glossary/#paper">paper</a> and to clarify any outstanding questions\nafter reading the paper.</p>\n<p>This document is divided into four parts:</p>\n<ol>\n<li><em>Clarifications</em> - clarifies any details that are not specified in the\npaper, but are important for practical implementations.</li>\n<li><em>Modifications</em> - outlines elements that are specified in the paper, but are\nimplemented differently in Cardano SL.</li>\n<li><em>Added features</em> - briefly outlines new features which are not described\nin the paper, but have been implemented in Cardano SL.</li>\n<li>\n<p><em>Omissions</em> - lists topics described in the paper but are not yet implemented into\nCardano SL.</p>\n<!-- end -->\n<h1>Clarifications</h1>\n<p>This section outlines any topics that require clarifications. </p>\n</li>\n</ol>\n<h2>Time, Slots, and Synchrony</h2>\n<p>In a basic model of the protocol time is divided into discrete units called\n<em>slots</em>. However, there are no details on how to obtain the current time value securely\nand with enough precision.</p>\n<p>In Cardano SL, the current time value is obtained from a user\'s computer system time value.</p>\n<p>We also have a feature to notify users if their system time is incorrect\n(we compare it with the time value that is obtained from NTP servers). This feature is planned for a future release.</p>\n<h2>Coin Tossing and Verifiable Secret Sharing</h2>\n<p>The paper suggests PVSS (Publicly Verifiable Secret Sharing) scheme by Schoenmakers for Cardano SL. However,\ncurrently Cardano SL uses <a href="https://eprint.iacr.org/2017/216.pdf">"SCRAPE: Scalable Randomness Attested by\nPublic Entities"</a> PVSS scheme.</p>\n<p>One of the challenges while using a VSS (Verifiable Secret Sharing) scheme is associating the\npublic key used for signing with the public key used for the VSS scheme\n(<code>VssPublicKey</code>). This is solved by introducing <code>VssCertificate</code>s. This\ncertificate is a signature given by a signing key for a pair consisting of\n<code>VssPublicKey</code> and the epoch until which this certificate is valid. Initially,\nall stakeholders with stake enough for participation in randomness generation\nhold certificates. When a new stakeholder with enough stake appears, or when an\nexisting certificate expires, a new certificate should be generated and\nsubmitted to the network. <code>VssCertificate</code>s are stored in blocks.</p>\n<p>PVSS scheme uses share verification information which also\nincludes a commitment to the secret. It is also used as a commitment in\nthe protocol. The PVSS scheme has been implemented over the elliptic curve\nsecp256r1. Please refer to <a href="/technical/pvss/">PVSS implementation in Cardano\nSL</a> for more details.</p>\n<h2>Block Generation Time</h2>\n<p>In the paper, they do not state explicitly when a slot leader should\ngenerate a new block and send it to the network: it can be done at the beginning\nof a slot, at the end of a slot, in the middle of a slot, etc. In Cardano SL\nthere is a special constant called "network diameter" which approximates maximal time\nnecessary to broadcast a block to all nodes in the network. For example, if network\ndiameter is 3, then block is generated and announced 3 seconds before the end of a slot.</p>\n<h2>Stake Delegation</h2>\n<p>Delegation scheme, as described in the paper, does not explicitly state whether proxy\nsigning certificates should be stored within the blockchain (though there is a\nsuggestion to store the revocation list in the blockchain). Without storing\nproxy signing certificates in the blockchain it is barely possible to consider\ndelegated stake in checking eligibility threshold. On the other hand, if all\ncertificates are stored in the blockchain, it may lead to a blockchain bloat\nwhen a big portion of blocks will be occupied by proxy certificates. Submitting\na certificate is free, so adversaries can generate as many certificates as they\nwant.</p>\n<p>There are two types of delegation in Cardano SL: heavyweight and lightweight.\nThere is a threshold on stake that one has to posses in order to participate in\nheavyweight delegation. Proxy signing certificates from heavyweight delegation\nare stored within the blockchain. On the contrary, lightweight delegation is\navailable for everybody, but certificates are not stored within the blockchain\nand are not considered when checking eligibility threshold. As the paper suggests,\n<em>delegation-by-proxy</em> scheme is used.</p>\n<p>Please read about <a href="/technical/delegation/">Stake Delegation in Cardano SL</a> for\nimplementation details.</p>\n<h1>Modifications</h1>\n<h2>Leader Selection Process</h2>\n<p>In the paper, Leader Selection Process is described as flipping a\n<code>(1 - p₁) … (1 - pⱼ₋₁) pⱼ</code>-biased coin to see whether the <code>j</code>-th stakeholder is\nselected as the leader of the given slot. Here <code>pⱼ</code> is probability of selecting the <code>j</code>-th\nstakeholder.</p>\n<p>In Cardano SL, it is implemented in a slightly different way. <code>R</code> random\nnumbers in a range <code>[0 .. totalCoins]</code> are generated, where <code>R</code> is a number of\nslots in an epoch. Stakeholders occupy different subsegments on this range,\nproportional to their stakes. This way, each random number maps into stakeholder.\nAlso, as the paper suggests, a short (32-bits) seed is used for initializing PRG\ninstead of using <code>n ⌈log λ⌉</code> random bits.</p>\n<p>Please read about <a href="/technical/leader-selection/">Leader Selection in Cardano SL</a>\nfor implementation details.</p>\n<h2>Commitments, openings, shares sending</h2>\n<p>Time of sending is randomized within a small interval. It is done to avoid network\noverload when all coin-tossing participants send their data at the same time.\nThis interval is chosen to be small enough for protocol to remain secure. If\nthis data is sent too late and there are many adversaries leading last few slots\nof a certain phase, it can happen that data will not be included into the block.</p>\n<h2>Multishares</h2>\n<p>In the paper, each stakeholder is presented as exactly one participant of the\nunderlying VSS scheme. However, it is natural that a stakeholder with more stake\nis more important than a stakeholder with less stake with regards to secret\nsharing. For instance, if three honest stakeholders control 60% of stake in\ntotal (each of them controls 20%) and there are 40 adversary stakeholders each\nhaving 1% of stake, then the adversary has full control over secret sharing.</p>\n<p>To overcome this problem, a number of shares for each stakeholder proportional\nto their stake is generated in Cardano SL.</p>\n<h2>Randomness Generation Failure</h2>\n<p>The paper does not cover the situation when commitments cannot be recovered.\nHowever, a practical implementation should account for such scenarios.\nCardano SL implementation uses a seed consisting of all zeroes if there are no\ncommitments that could be recovered.</p>\n<h1>Added Features</h1>\n<h2>Update System</h2>\n<p>See the article on <a href="/cardano/update-mechanism/">update system</a>.</p>\n<h2>Security of P2P</h2>\n<p>See the article on <a href="/technical/protocols/p2p/">P2P implementation and\nhardening</a>.</p>\n<h1>Omissions</h1>\n<p>The sections on <em>Input Endorsers</em> and <em>Incentive Structure</em> are not implemented\nyet. Those sections are to be implemented together with the pending research on\nSide-chains and released within the Side-chains release.</p>',frontmatter:{path:"/en/cardano/differences/",doc_title:"Differences Between Paper and the Implementation",author:null,date:null,language:"en",label:"docs",keywords:null}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---en-cardano-balance-and-stake-783a89125fb2e1a51cce.js.map